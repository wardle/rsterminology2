// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snomed/snomed.proto

package com.eldrix.terminology.snomedct;

public final class Protos {
  private Protos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ConceptOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.Concept)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Uniquely identifies the concept.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    boolean hasEffectiveTime();
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    com.google.protobuf.Timestamp getEffectiveTime();
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder();

    /**
     * <pre>
     * Specifies whether the concept was active or inactive from the nominal release date specified by the effectiveTime.
     * </pre>
     *
     * <code>bool active = 3;</code>
     */
    boolean getActive();

    /**
     * <pre>
     * Identifies the concept version's module. Set to a descendant of 900000000000443000 |Module|within the metadata hierarchy.
     * </pre>
     *
     * <code>int64 module_id = 4;</code>
     */
    long getModuleId();

    /**
     * <pre>
     * Specifies if the concept version is primitive or sufficiently defined. Set to a descendant of 900000000000444006 |Definition status|in the metadata hierarchy.
     * </pre>
     *
     * <code>int64 definition_status_id = 5;</code>
     */
    long getDefinitionStatusId();
  }
  /**
   * <pre>
   * A Concept represents a SNOMED-CT concept.
   * The RF2 release allows multiple duplicate entries per concept identifier to permit versioning.
   * As such, we have a compound primary key made up of the concept identifier and the effective time.
   * Only one concept with a specified identifier will be active at any time point.
   * See https://confluence.ihtsdotools.org/display/DOCRELFMT/3.2.1.+Concept+File+Specification
   * </pre>
   *
   * Protobuf type {@code snomed.Concept}
   */
  public  static final class Concept extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.Concept)
      ConceptOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Concept.newBuilder() to construct.
    private Concept(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Concept() {
      id_ = 0L;
      active_ = false;
      moduleId_ = 0L;
      definitionStatusId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Concept(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (effectiveTime_ != null) {
                subBuilder = effectiveTime_.toBuilder();
              }
              effectiveTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveTime_);
                effectiveTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              active_ = input.readBool();
              break;
            }
            case 32: {

              moduleId_ = input.readInt64();
              break;
            }
            case 40: {

              definitionStatusId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Concept_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Concept_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.Concept.class, com.eldrix.terminology.snomedct.Protos.Concept.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * Uniquely identifies the concept.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int EFFECTIVE_TIME_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp effectiveTime_;
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public boolean hasEffectiveTime() {
      return effectiveTime_ != null;
    }
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public com.google.protobuf.Timestamp getEffectiveTime() {
      return effectiveTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
    }
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder() {
      return getEffectiveTime();
    }

    public static final int ACTIVE_FIELD_NUMBER = 3;
    private boolean active_;
    /**
     * <pre>
     * Specifies whether the concept was active or inactive from the nominal release date specified by the effectiveTime.
     * </pre>
     *
     * <code>bool active = 3;</code>
     */
    public boolean getActive() {
      return active_;
    }

    public static final int MODULE_ID_FIELD_NUMBER = 4;
    private long moduleId_;
    /**
     * <pre>
     * Identifies the concept version's module. Set to a descendant of 900000000000443000 |Module|within the metadata hierarchy.
     * </pre>
     *
     * <code>int64 module_id = 4;</code>
     */
    public long getModuleId() {
      return moduleId_;
    }

    public static final int DEFINITION_STATUS_ID_FIELD_NUMBER = 5;
    private long definitionStatusId_;
    /**
     * <pre>
     * Specifies if the concept version is primitive or sufficiently defined. Set to a descendant of 900000000000444006 |Definition status|in the metadata hierarchy.
     * </pre>
     *
     * <code>int64 definition_status_id = 5;</code>
     */
    public long getDefinitionStatusId() {
      return definitionStatusId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (effectiveTime_ != null) {
        output.writeMessage(2, getEffectiveTime());
      }
      if (active_ != false) {
        output.writeBool(3, active_);
      }
      if (moduleId_ != 0L) {
        output.writeInt64(4, moduleId_);
      }
      if (definitionStatusId_ != 0L) {
        output.writeInt64(5, definitionStatusId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (effectiveTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEffectiveTime());
      }
      if (active_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, active_);
      }
      if (moduleId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, moduleId_);
      }
      if (definitionStatusId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, definitionStatusId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.Concept)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.Concept other = (com.eldrix.terminology.snomedct.Protos.Concept) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (hasEffectiveTime() == other.hasEffectiveTime());
      if (hasEffectiveTime()) {
        result = result && getEffectiveTime()
            .equals(other.getEffectiveTime());
      }
      result = result && (getActive()
          == other.getActive());
      result = result && (getModuleId()
          == other.getModuleId());
      result = result && (getDefinitionStatusId()
          == other.getDefinitionStatusId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasEffectiveTime()) {
        hash = (37 * hash) + EFFECTIVE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveTime().hashCode();
      }
      hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActive());
      hash = (37 * hash) + MODULE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getModuleId());
      hash = (37 * hash) + DEFINITION_STATUS_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDefinitionStatusId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Concept parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.Concept prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Concept represents a SNOMED-CT concept.
     * The RF2 release allows multiple duplicate entries per concept identifier to permit versioning.
     * As such, we have a compound primary key made up of the concept identifier and the effective time.
     * Only one concept with a specified identifier will be active at any time point.
     * See https://confluence.ihtsdotools.org/display/DOCRELFMT/3.2.1.+Concept+File+Specification
     * </pre>
     *
     * Protobuf type {@code snomed.Concept}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.Concept)
        com.eldrix.terminology.snomedct.Protos.ConceptOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Concept_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Concept_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.Concept.class, com.eldrix.terminology.snomedct.Protos.Concept.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.Concept.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = null;
        } else {
          effectiveTime_ = null;
          effectiveTimeBuilder_ = null;
        }
        active_ = false;

        moduleId_ = 0L;

        definitionStatusId_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Concept_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.Concept getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.Concept.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.Concept build() {
        com.eldrix.terminology.snomedct.Protos.Concept result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.Concept buildPartial() {
        com.eldrix.terminology.snomedct.Protos.Concept result = new com.eldrix.terminology.snomedct.Protos.Concept(this);
        result.id_ = id_;
        if (effectiveTimeBuilder_ == null) {
          result.effectiveTime_ = effectiveTime_;
        } else {
          result.effectiveTime_ = effectiveTimeBuilder_.build();
        }
        result.active_ = active_;
        result.moduleId_ = moduleId_;
        result.definitionStatusId_ = definitionStatusId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.Concept) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.Concept)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.Concept other) {
        if (other == com.eldrix.terminology.snomedct.Protos.Concept.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasEffectiveTime()) {
          mergeEffectiveTime(other.getEffectiveTime());
        }
        if (other.getActive() != false) {
          setActive(other.getActive());
        }
        if (other.getModuleId() != 0L) {
          setModuleId(other.getModuleId());
        }
        if (other.getDefinitionStatusId() != 0L) {
          setDefinitionStatusId(other.getDefinitionStatusId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.Concept parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.Concept) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       * Uniquely identifies the concept.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * Uniquely identifies the concept.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Uniquely identifies the concept.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp effectiveTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> effectiveTimeBuilder_;
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public boolean hasEffectiveTime() {
        return effectiveTimeBuilder_ != null || effectiveTime_ != null;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.Timestamp getEffectiveTime() {
        if (effectiveTimeBuilder_ == null) {
          return effectiveTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
        } else {
          return effectiveTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder setEffectiveTime(com.google.protobuf.Timestamp value) {
        if (effectiveTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveTime_ = value;
          onChanged();
        } else {
          effectiveTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder setEffectiveTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = builderForValue.build();
          onChanged();
        } else {
          effectiveTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder mergeEffectiveTime(com.google.protobuf.Timestamp value) {
        if (effectiveTimeBuilder_ == null) {
          if (effectiveTime_ != null) {
            effectiveTime_ =
              com.google.protobuf.Timestamp.newBuilder(effectiveTime_).mergeFrom(value).buildPartial();
          } else {
            effectiveTime_ = value;
          }
          onChanged();
        } else {
          effectiveTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder clearEffectiveTime() {
        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = null;
          onChanged();
        } else {
          effectiveTime_ = null;
          effectiveTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEffectiveTimeBuilder() {
        
        onChanged();
        return getEffectiveTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder() {
        if (effectiveTimeBuilder_ != null) {
          return effectiveTimeBuilder_.getMessageOrBuilder();
        } else {
          return effectiveTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
        }
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEffectiveTimeFieldBuilder() {
        if (effectiveTimeBuilder_ == null) {
          effectiveTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEffectiveTime(),
                  getParentForChildren(),
                  isClean());
          effectiveTime_ = null;
        }
        return effectiveTimeBuilder_;
      }

      private boolean active_ ;
      /**
       * <pre>
       * Specifies whether the concept was active or inactive from the nominal release date specified by the effectiveTime.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public boolean getActive() {
        return active_;
      }
      /**
       * <pre>
       * Specifies whether the concept was active or inactive from the nominal release date specified by the effectiveTime.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public Builder setActive(boolean value) {
        
        active_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies whether the concept was active or inactive from the nominal release date specified by the effectiveTime.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public Builder clearActive() {
        
        active_ = false;
        onChanged();
        return this;
      }

      private long moduleId_ ;
      /**
       * <pre>
       * Identifies the concept version's module. Set to a descendant of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public long getModuleId() {
        return moduleId_;
      }
      /**
       * <pre>
       * Identifies the concept version's module. Set to a descendant of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public Builder setModuleId(long value) {
        
        moduleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the concept version's module. Set to a descendant of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public Builder clearModuleId() {
        
        moduleId_ = 0L;
        onChanged();
        return this;
      }

      private long definitionStatusId_ ;
      /**
       * <pre>
       * Specifies if the concept version is primitive or sufficiently defined. Set to a descendant of 900000000000444006 |Definition status|in the metadata hierarchy.
       * </pre>
       *
       * <code>int64 definition_status_id = 5;</code>
       */
      public long getDefinitionStatusId() {
        return definitionStatusId_;
      }
      /**
       * <pre>
       * Specifies if the concept version is primitive or sufficiently defined. Set to a descendant of 900000000000444006 |Definition status|in the metadata hierarchy.
       * </pre>
       *
       * <code>int64 definition_status_id = 5;</code>
       */
      public Builder setDefinitionStatusId(long value) {
        
        definitionStatusId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies if the concept version is primitive or sufficiently defined. Set to a descendant of 900000000000444006 |Definition status|in the metadata hierarchy.
       * </pre>
       *
       * <code>int64 definition_status_id = 5;</code>
       */
      public Builder clearDefinitionStatusId() {
        
        definitionStatusId_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.Concept)
    }

    // @@protoc_insertion_point(class_scope:snomed.Concept)
    private static final com.eldrix.terminology.snomedct.Protos.Concept DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.Concept();
    }

    public static com.eldrix.terminology.snomedct.Protos.Concept getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Concept>
        PARSER = new com.google.protobuf.AbstractParser<Concept>() {
      public Concept parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Concept(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Concept> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Concept> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.Concept getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DescriptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.Description)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Uniquely identifies the description.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    boolean hasEffectiveTime();
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    com.google.protobuf.Timestamp getEffectiveTime();
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder();

    /**
     * <pre>
     * Specifies whether the state of the description was active or inactive from the nominal release date specified by the effectiveTime .
     * </pre>
     *
     * <code>bool active = 3;</code>
     */
    boolean getActive();

    /**
     * <pre>
     * Identifies the description version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
     * </pre>
     *
     * <code>int64 module_id = 4;</code>
     */
    long getModuleId();

    /**
     * <pre>
     * Identifies the concept to which this description applies. Set to the identifier of a concept in the 138875005 |SNOMED CT Concept| hierarchy within the Concept.
     * </pre>
     *
     * <code>int64 concept_id = 5;</code>
     */
    long getConceptId();

    /**
     * <pre>
     * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
     * </pre>
     *
     * <code>string LanguageCode = 6;</code>
     */
    java.lang.String getLanguageCode();
    /**
     * <pre>
     * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
     * </pre>
     *
     * <code>string LanguageCode = 6;</code>
     */
    com.google.protobuf.ByteString
        getLanguageCodeBytes();

    /**
     * <pre>
     * Identifies whether the description is fully specified name a synonym or other description type. This field is set to a child of 900000000000446008 |Description type|in the Metadata hierarchy.
     * </pre>
     *
     * <code>int64 type_id = 7;</code>
     */
    long getTypeId();

    /**
     * <pre>
     * The description version's text value, represented in UTF-8 encoding.
     * </pre>
     *
     * <code>string term = 8;</code>
     */
    java.lang.String getTerm();
    /**
     * <pre>
     * The description version's text value, represented in UTF-8 encoding.
     * </pre>
     *
     * <code>string term = 8;</code>
     */
    com.google.protobuf.ByteString
        getTermBytes();

    /**
     * <pre>
     * Identifies the concept enumeration value that represents the case significance of this description version. For example, the term may be completely case sensitive, case insensitive or initial letter case insensitive. This field will be set to a child of 900000000000447004 |Case significance|within the metadata hierarchy.
     * </pre>
     *
     * <code>int64 case_significance = 9;</code>
     */
    long getCaseSignificance();
  }
  /**
   * <pre>
   * A Description holds descriptions that describe SNOMED CT concepts.
   * A description is used to give meaning to a concept and provide well-understood and standard ways of referring to a concept.
   * See https://confluence.ihtsdotools.org/display/DOCRELFMT/3.2.2.+Description+File+Specification
   * </pre>
   *
   * Protobuf type {@code snomed.Description}
   */
  public  static final class Description extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.Description)
      DescriptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Description.newBuilder() to construct.
    private Description(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Description() {
      id_ = 0L;
      active_ = false;
      moduleId_ = 0L;
      conceptId_ = 0L;
      languageCode_ = "";
      typeId_ = 0L;
      term_ = "";
      caseSignificance_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Description(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (effectiveTime_ != null) {
                subBuilder = effectiveTime_.toBuilder();
              }
              effectiveTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveTime_);
                effectiveTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              active_ = input.readBool();
              break;
            }
            case 32: {

              moduleId_ = input.readInt64();
              break;
            }
            case 40: {

              conceptId_ = input.readInt64();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              languageCode_ = s;
              break;
            }
            case 56: {

              typeId_ = input.readInt64();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              term_ = s;
              break;
            }
            case 72: {

              caseSignificance_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Description_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Description_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.Description.class, com.eldrix.terminology.snomedct.Protos.Description.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * Uniquely identifies the description.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int EFFECTIVE_TIME_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp effectiveTime_;
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public boolean hasEffectiveTime() {
      return effectiveTime_ != null;
    }
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public com.google.protobuf.Timestamp getEffectiveTime() {
      return effectiveTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
    }
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder() {
      return getEffectiveTime();
    }

    public static final int ACTIVE_FIELD_NUMBER = 3;
    private boolean active_;
    /**
     * <pre>
     * Specifies whether the state of the description was active or inactive from the nominal release date specified by the effectiveTime .
     * </pre>
     *
     * <code>bool active = 3;</code>
     */
    public boolean getActive() {
      return active_;
    }

    public static final int MODULE_ID_FIELD_NUMBER = 4;
    private long moduleId_;
    /**
     * <pre>
     * Identifies the description version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
     * </pre>
     *
     * <code>int64 module_id = 4;</code>
     */
    public long getModuleId() {
      return moduleId_;
    }

    public static final int CONCEPT_ID_FIELD_NUMBER = 5;
    private long conceptId_;
    /**
     * <pre>
     * Identifies the concept to which this description applies. Set to the identifier of a concept in the 138875005 |SNOMED CT Concept| hierarchy within the Concept.
     * </pre>
     *
     * <code>int64 concept_id = 5;</code>
     */
    public long getConceptId() {
      return conceptId_;
    }

    public static final int LANGUAGECODE_FIELD_NUMBER = 6;
    private volatile java.lang.Object languageCode_;
    /**
     * <pre>
     * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
     * </pre>
     *
     * <code>string LanguageCode = 6;</code>
     */
    public java.lang.String getLanguageCode() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        languageCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
     * </pre>
     *
     * <code>string LanguageCode = 6;</code>
     */
    public com.google.protobuf.ByteString
        getLanguageCodeBytes() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        languageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_ID_FIELD_NUMBER = 7;
    private long typeId_;
    /**
     * <pre>
     * Identifies whether the description is fully specified name a synonym or other description type. This field is set to a child of 900000000000446008 |Description type|in the Metadata hierarchy.
     * </pre>
     *
     * <code>int64 type_id = 7;</code>
     */
    public long getTypeId() {
      return typeId_;
    }

    public static final int TERM_FIELD_NUMBER = 8;
    private volatile java.lang.Object term_;
    /**
     * <pre>
     * The description version's text value, represented in UTF-8 encoding.
     * </pre>
     *
     * <code>string term = 8;</code>
     */
    public java.lang.String getTerm() {
      java.lang.Object ref = term_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        term_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description version's text value, represented in UTF-8 encoding.
     * </pre>
     *
     * <code>string term = 8;</code>
     */
    public com.google.protobuf.ByteString
        getTermBytes() {
      java.lang.Object ref = term_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        term_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CASE_SIGNIFICANCE_FIELD_NUMBER = 9;
    private long caseSignificance_;
    /**
     * <pre>
     * Identifies the concept enumeration value that represents the case significance of this description version. For example, the term may be completely case sensitive, case insensitive or initial letter case insensitive. This field will be set to a child of 900000000000447004 |Case significance|within the metadata hierarchy.
     * </pre>
     *
     * <code>int64 case_significance = 9;</code>
     */
    public long getCaseSignificance() {
      return caseSignificance_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (effectiveTime_ != null) {
        output.writeMessage(2, getEffectiveTime());
      }
      if (active_ != false) {
        output.writeBool(3, active_);
      }
      if (moduleId_ != 0L) {
        output.writeInt64(4, moduleId_);
      }
      if (conceptId_ != 0L) {
        output.writeInt64(5, conceptId_);
      }
      if (!getLanguageCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, languageCode_);
      }
      if (typeId_ != 0L) {
        output.writeInt64(7, typeId_);
      }
      if (!getTermBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, term_);
      }
      if (caseSignificance_ != 0L) {
        output.writeInt64(9, caseSignificance_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (effectiveTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEffectiveTime());
      }
      if (active_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, active_);
      }
      if (moduleId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, moduleId_);
      }
      if (conceptId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, conceptId_);
      }
      if (!getLanguageCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, languageCode_);
      }
      if (typeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, typeId_);
      }
      if (!getTermBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, term_);
      }
      if (caseSignificance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, caseSignificance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.Description)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.Description other = (com.eldrix.terminology.snomedct.Protos.Description) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (hasEffectiveTime() == other.hasEffectiveTime());
      if (hasEffectiveTime()) {
        result = result && getEffectiveTime()
            .equals(other.getEffectiveTime());
      }
      result = result && (getActive()
          == other.getActive());
      result = result && (getModuleId()
          == other.getModuleId());
      result = result && (getConceptId()
          == other.getConceptId());
      result = result && getLanguageCode()
          .equals(other.getLanguageCode());
      result = result && (getTypeId()
          == other.getTypeId());
      result = result && getTerm()
          .equals(other.getTerm());
      result = result && (getCaseSignificance()
          == other.getCaseSignificance());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasEffectiveTime()) {
        hash = (37 * hash) + EFFECTIVE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveTime().hashCode();
      }
      hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActive());
      hash = (37 * hash) + MODULE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getModuleId());
      hash = (37 * hash) + CONCEPT_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getConceptId());
      hash = (37 * hash) + LANGUAGECODE_FIELD_NUMBER;
      hash = (53 * hash) + getLanguageCode().hashCode();
      hash = (37 * hash) + TYPE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTypeId());
      hash = (37 * hash) + TERM_FIELD_NUMBER;
      hash = (53 * hash) + getTerm().hashCode();
      hash = (37 * hash) + CASE_SIGNIFICANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCaseSignificance());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Description parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.Description prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Description holds descriptions that describe SNOMED CT concepts.
     * A description is used to give meaning to a concept and provide well-understood and standard ways of referring to a concept.
     * See https://confluence.ihtsdotools.org/display/DOCRELFMT/3.2.2.+Description+File+Specification
     * </pre>
     *
     * Protobuf type {@code snomed.Description}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.Description)
        com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Description_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Description_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.Description.class, com.eldrix.terminology.snomedct.Protos.Description.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.Description.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = null;
        } else {
          effectiveTime_ = null;
          effectiveTimeBuilder_ = null;
        }
        active_ = false;

        moduleId_ = 0L;

        conceptId_ = 0L;

        languageCode_ = "";

        typeId_ = 0L;

        term_ = "";

        caseSignificance_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Description_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.Description getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.Description.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.Description build() {
        com.eldrix.terminology.snomedct.Protos.Description result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.Description buildPartial() {
        com.eldrix.terminology.snomedct.Protos.Description result = new com.eldrix.terminology.snomedct.Protos.Description(this);
        result.id_ = id_;
        if (effectiveTimeBuilder_ == null) {
          result.effectiveTime_ = effectiveTime_;
        } else {
          result.effectiveTime_ = effectiveTimeBuilder_.build();
        }
        result.active_ = active_;
        result.moduleId_ = moduleId_;
        result.conceptId_ = conceptId_;
        result.languageCode_ = languageCode_;
        result.typeId_ = typeId_;
        result.term_ = term_;
        result.caseSignificance_ = caseSignificance_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.Description) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.Description)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.Description other) {
        if (other == com.eldrix.terminology.snomedct.Protos.Description.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasEffectiveTime()) {
          mergeEffectiveTime(other.getEffectiveTime());
        }
        if (other.getActive() != false) {
          setActive(other.getActive());
        }
        if (other.getModuleId() != 0L) {
          setModuleId(other.getModuleId());
        }
        if (other.getConceptId() != 0L) {
          setConceptId(other.getConceptId());
        }
        if (!other.getLanguageCode().isEmpty()) {
          languageCode_ = other.languageCode_;
          onChanged();
        }
        if (other.getTypeId() != 0L) {
          setTypeId(other.getTypeId());
        }
        if (!other.getTerm().isEmpty()) {
          term_ = other.term_;
          onChanged();
        }
        if (other.getCaseSignificance() != 0L) {
          setCaseSignificance(other.getCaseSignificance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.Description parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.Description) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       * Uniquely identifies the description.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * Uniquely identifies the description.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Uniquely identifies the description.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp effectiveTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> effectiveTimeBuilder_;
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public boolean hasEffectiveTime() {
        return effectiveTimeBuilder_ != null || effectiveTime_ != null;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.Timestamp getEffectiveTime() {
        if (effectiveTimeBuilder_ == null) {
          return effectiveTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
        } else {
          return effectiveTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder setEffectiveTime(com.google.protobuf.Timestamp value) {
        if (effectiveTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveTime_ = value;
          onChanged();
        } else {
          effectiveTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder setEffectiveTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = builderForValue.build();
          onChanged();
        } else {
          effectiveTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder mergeEffectiveTime(com.google.protobuf.Timestamp value) {
        if (effectiveTimeBuilder_ == null) {
          if (effectiveTime_ != null) {
            effectiveTime_ =
              com.google.protobuf.Timestamp.newBuilder(effectiveTime_).mergeFrom(value).buildPartial();
          } else {
            effectiveTime_ = value;
          }
          onChanged();
        } else {
          effectiveTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder clearEffectiveTime() {
        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = null;
          onChanged();
        } else {
          effectiveTime_ = null;
          effectiveTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEffectiveTimeBuilder() {
        
        onChanged();
        return getEffectiveTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder() {
        if (effectiveTimeBuilder_ != null) {
          return effectiveTimeBuilder_.getMessageOrBuilder();
        } else {
          return effectiveTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
        }
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEffectiveTimeFieldBuilder() {
        if (effectiveTimeBuilder_ == null) {
          effectiveTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEffectiveTime(),
                  getParentForChildren(),
                  isClean());
          effectiveTime_ = null;
        }
        return effectiveTimeBuilder_;
      }

      private boolean active_ ;
      /**
       * <pre>
       * Specifies whether the state of the description was active or inactive from the nominal release date specified by the effectiveTime .
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public boolean getActive() {
        return active_;
      }
      /**
       * <pre>
       * Specifies whether the state of the description was active or inactive from the nominal release date specified by the effectiveTime .
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public Builder setActive(boolean value) {
        
        active_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies whether the state of the description was active or inactive from the nominal release date specified by the effectiveTime .
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public Builder clearActive() {
        
        active_ = false;
        onChanged();
        return this;
      }

      private long moduleId_ ;
      /**
       * <pre>
       * Identifies the description version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public long getModuleId() {
        return moduleId_;
      }
      /**
       * <pre>
       * Identifies the description version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public Builder setModuleId(long value) {
        
        moduleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the description version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public Builder clearModuleId() {
        
        moduleId_ = 0L;
        onChanged();
        return this;
      }

      private long conceptId_ ;
      /**
       * <pre>
       * Identifies the concept to which this description applies. Set to the identifier of a concept in the 138875005 |SNOMED CT Concept| hierarchy within the Concept.
       * </pre>
       *
       * <code>int64 concept_id = 5;</code>
       */
      public long getConceptId() {
        return conceptId_;
      }
      /**
       * <pre>
       * Identifies the concept to which this description applies. Set to the identifier of a concept in the 138875005 |SNOMED CT Concept| hierarchy within the Concept.
       * </pre>
       *
       * <code>int64 concept_id = 5;</code>
       */
      public Builder setConceptId(long value) {
        
        conceptId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the concept to which this description applies. Set to the identifier of a concept in the 138875005 |SNOMED CT Concept| hierarchy within the Concept.
       * </pre>
       *
       * <code>int64 concept_id = 5;</code>
       */
      public Builder clearConceptId() {
        
        conceptId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object languageCode_ = "";
      /**
       * <pre>
       * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
       * </pre>
       *
       * <code>string LanguageCode = 6;</code>
       */
      public java.lang.String getLanguageCode() {
        java.lang.Object ref = languageCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          languageCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
       * </pre>
       *
       * <code>string LanguageCode = 6;</code>
       */
      public com.google.protobuf.ByteString
          getLanguageCodeBytes() {
        java.lang.Object ref = languageCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          languageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
       * </pre>
       *
       * <code>string LanguageCode = 6;</code>
       */
      public Builder setLanguageCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        languageCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
       * </pre>
       *
       * <code>string LanguageCode = 6;</code>
       */
      public Builder clearLanguageCode() {
        
        languageCode_ = getDefaultInstance().getLanguageCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the language of the description text using the two character ISO-639-1 code. Note that this specifies a language level only, not a dialect or country code.
       * </pre>
       *
       * <code>string LanguageCode = 6;</code>
       */
      public Builder setLanguageCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        languageCode_ = value;
        onChanged();
        return this;
      }

      private long typeId_ ;
      /**
       * <pre>
       * Identifies whether the description is fully specified name a synonym or other description type. This field is set to a child of 900000000000446008 |Description type|in the Metadata hierarchy.
       * </pre>
       *
       * <code>int64 type_id = 7;</code>
       */
      public long getTypeId() {
        return typeId_;
      }
      /**
       * <pre>
       * Identifies whether the description is fully specified name a synonym or other description type. This field is set to a child of 900000000000446008 |Description type|in the Metadata hierarchy.
       * </pre>
       *
       * <code>int64 type_id = 7;</code>
       */
      public Builder setTypeId(long value) {
        
        typeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies whether the description is fully specified name a synonym or other description type. This field is set to a child of 900000000000446008 |Description type|in the Metadata hierarchy.
       * </pre>
       *
       * <code>int64 type_id = 7;</code>
       */
      public Builder clearTypeId() {
        
        typeId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object term_ = "";
      /**
       * <pre>
       * The description version's text value, represented in UTF-8 encoding.
       * </pre>
       *
       * <code>string term = 8;</code>
       */
      public java.lang.String getTerm() {
        java.lang.Object ref = term_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          term_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description version's text value, represented in UTF-8 encoding.
       * </pre>
       *
       * <code>string term = 8;</code>
       */
      public com.google.protobuf.ByteString
          getTermBytes() {
        java.lang.Object ref = term_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          term_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description version's text value, represented in UTF-8 encoding.
       * </pre>
       *
       * <code>string term = 8;</code>
       */
      public Builder setTerm(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        term_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description version's text value, represented in UTF-8 encoding.
       * </pre>
       *
       * <code>string term = 8;</code>
       */
      public Builder clearTerm() {
        
        term_ = getDefaultInstance().getTerm();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description version's text value, represented in UTF-8 encoding.
       * </pre>
       *
       * <code>string term = 8;</code>
       */
      public Builder setTermBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        term_ = value;
        onChanged();
        return this;
      }

      private long caseSignificance_ ;
      /**
       * <pre>
       * Identifies the concept enumeration value that represents the case significance of this description version. For example, the term may be completely case sensitive, case insensitive or initial letter case insensitive. This field will be set to a child of 900000000000447004 |Case significance|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 case_significance = 9;</code>
       */
      public long getCaseSignificance() {
        return caseSignificance_;
      }
      /**
       * <pre>
       * Identifies the concept enumeration value that represents the case significance of this description version. For example, the term may be completely case sensitive, case insensitive or initial letter case insensitive. This field will be set to a child of 900000000000447004 |Case significance|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 case_significance = 9;</code>
       */
      public Builder setCaseSignificance(long value) {
        
        caseSignificance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the concept enumeration value that represents the case significance of this description version. For example, the term may be completely case sensitive, case insensitive or initial letter case insensitive. This field will be set to a child of 900000000000447004 |Case significance|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 case_significance = 9;</code>
       */
      public Builder clearCaseSignificance() {
        
        caseSignificance_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.Description)
    }

    // @@protoc_insertion_point(class_scope:snomed.Description)
    private static final com.eldrix.terminology.snomedct.Protos.Description DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.Description();
    }

    public static com.eldrix.terminology.snomedct.Protos.Description getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Description>
        PARSER = new com.google.protobuf.AbstractParser<Description>() {
      public Description parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Description(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Description> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Description> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.Description getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RelationshipOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.Relationship)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Uniquely identifies the relationship.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    boolean hasEffectiveTime();
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    com.google.protobuf.Timestamp getEffectiveTime();
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder();

    /**
     * <pre>
     * Specifies whether the state of the relationship was active or inactive from the nominal release date specified by the effectiveTime field.
     * </pre>
     *
     * <code>bool active = 3;</code>
     */
    boolean getActive();

    /**
     * <pre>
     * Identifies the relationship version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
     * </pre>
     *
     * <code>int64 module_id = 4;</code>
     */
    long getModuleId();

    /**
     * <pre>
     * Identifies the source concept of the relationship version. That is the concept defined by this relationship. Set to the identifier of a concept. in the Concept File.
     * </pre>
     *
     * <code>int64 source_id = 5;</code>
     */
    long getSourceId();

    /**
     * <pre>
     * Identifies the concept that is the destination of the relationship version.
     * </pre>
     *
     * <code>int64 destination_id = 6;</code>
     */
    long getDestinationId();

    /**
     * <pre>
     * Groups together relationship versions that are part of a logically associated relationshipGroup. All active Relationship records with the same relationshipGroup number and sourceId are grouped in this way.
     * </pre>
     *
     * <code>int64 relationship_group = 7;</code>
     */
    long getRelationshipGroup();

    /**
     * <pre>
     * Identifies the concept that represent the defining attribute (or relationship type) represented by this relationship version.
     * </pre>
     *
     * <code>int64 type_id = 8;</code>
     */
    long getTypeId();

    /**
     * <pre>
     * A concept enumeration value that identifies the characteristic type of the relationship version (i.e. whether the relationship version is defining, qualifying, etc.) This field is set to a descendant of 900000000000449001 |Characteristic type|in the metadata hierarchy.
     * </pre>
     *
     * <code>int64 characteristic_type_id = 9;</code>
     */
    long getCharacteristicTypeId();

    /**
     * <pre>
     * Ignore. A concept enumeration value that identifies the type of Description Logic (DL) restriction (some, all, etc.).  
     * </pre>
     *
     * <code>int64 modifier_id = 10;</code>
     */
    long getModifierId();
  }
  /**
   * <pre>
   * Relationship defines a relationship between two concepts as a type itself defined as a concept
   * </pre>
   *
   * Protobuf type {@code snomed.Relationship}
   */
  public  static final class Relationship extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.Relationship)
      RelationshipOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Relationship.newBuilder() to construct.
    private Relationship(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Relationship() {
      id_ = 0L;
      active_ = false;
      moduleId_ = 0L;
      sourceId_ = 0L;
      destinationId_ = 0L;
      relationshipGroup_ = 0L;
      typeId_ = 0L;
      characteristicTypeId_ = 0L;
      modifierId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Relationship(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (effectiveTime_ != null) {
                subBuilder = effectiveTime_.toBuilder();
              }
              effectiveTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveTime_);
                effectiveTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              active_ = input.readBool();
              break;
            }
            case 32: {

              moduleId_ = input.readInt64();
              break;
            }
            case 40: {

              sourceId_ = input.readInt64();
              break;
            }
            case 48: {

              destinationId_ = input.readInt64();
              break;
            }
            case 56: {

              relationshipGroup_ = input.readInt64();
              break;
            }
            case 64: {

              typeId_ = input.readInt64();
              break;
            }
            case 72: {

              characteristicTypeId_ = input.readInt64();
              break;
            }
            case 80: {

              modifierId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Relationship_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Relationship_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.Relationship.class, com.eldrix.terminology.snomedct.Protos.Relationship.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * Uniquely identifies the relationship.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int EFFECTIVE_TIME_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp effectiveTime_;
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public boolean hasEffectiveTime() {
      return effectiveTime_ != null;
    }
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public com.google.protobuf.Timestamp getEffectiveTime() {
      return effectiveTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
    }
    /**
     * <pre>
     * Specifies the inclusive date at which the component version's state became the then current valid state of the component
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder() {
      return getEffectiveTime();
    }

    public static final int ACTIVE_FIELD_NUMBER = 3;
    private boolean active_;
    /**
     * <pre>
     * Specifies whether the state of the relationship was active or inactive from the nominal release date specified by the effectiveTime field.
     * </pre>
     *
     * <code>bool active = 3;</code>
     */
    public boolean getActive() {
      return active_;
    }

    public static final int MODULE_ID_FIELD_NUMBER = 4;
    private long moduleId_;
    /**
     * <pre>
     * Identifies the relationship version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
     * </pre>
     *
     * <code>int64 module_id = 4;</code>
     */
    public long getModuleId() {
      return moduleId_;
    }

    public static final int SOURCE_ID_FIELD_NUMBER = 5;
    private long sourceId_;
    /**
     * <pre>
     * Identifies the source concept of the relationship version. That is the concept defined by this relationship. Set to the identifier of a concept. in the Concept File.
     * </pre>
     *
     * <code>int64 source_id = 5;</code>
     */
    public long getSourceId() {
      return sourceId_;
    }

    public static final int DESTINATION_ID_FIELD_NUMBER = 6;
    private long destinationId_;
    /**
     * <pre>
     * Identifies the concept that is the destination of the relationship version.
     * </pre>
     *
     * <code>int64 destination_id = 6;</code>
     */
    public long getDestinationId() {
      return destinationId_;
    }

    public static final int RELATIONSHIP_GROUP_FIELD_NUMBER = 7;
    private long relationshipGroup_;
    /**
     * <pre>
     * Groups together relationship versions that are part of a logically associated relationshipGroup. All active Relationship records with the same relationshipGroup number and sourceId are grouped in this way.
     * </pre>
     *
     * <code>int64 relationship_group = 7;</code>
     */
    public long getRelationshipGroup() {
      return relationshipGroup_;
    }

    public static final int TYPE_ID_FIELD_NUMBER = 8;
    private long typeId_;
    /**
     * <pre>
     * Identifies the concept that represent the defining attribute (or relationship type) represented by this relationship version.
     * </pre>
     *
     * <code>int64 type_id = 8;</code>
     */
    public long getTypeId() {
      return typeId_;
    }

    public static final int CHARACTERISTIC_TYPE_ID_FIELD_NUMBER = 9;
    private long characteristicTypeId_;
    /**
     * <pre>
     * A concept enumeration value that identifies the characteristic type of the relationship version (i.e. whether the relationship version is defining, qualifying, etc.) This field is set to a descendant of 900000000000449001 |Characteristic type|in the metadata hierarchy.
     * </pre>
     *
     * <code>int64 characteristic_type_id = 9;</code>
     */
    public long getCharacteristicTypeId() {
      return characteristicTypeId_;
    }

    public static final int MODIFIER_ID_FIELD_NUMBER = 10;
    private long modifierId_;
    /**
     * <pre>
     * Ignore. A concept enumeration value that identifies the type of Description Logic (DL) restriction (some, all, etc.).  
     * </pre>
     *
     * <code>int64 modifier_id = 10;</code>
     */
    public long getModifierId() {
      return modifierId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (effectiveTime_ != null) {
        output.writeMessage(2, getEffectiveTime());
      }
      if (active_ != false) {
        output.writeBool(3, active_);
      }
      if (moduleId_ != 0L) {
        output.writeInt64(4, moduleId_);
      }
      if (sourceId_ != 0L) {
        output.writeInt64(5, sourceId_);
      }
      if (destinationId_ != 0L) {
        output.writeInt64(6, destinationId_);
      }
      if (relationshipGroup_ != 0L) {
        output.writeInt64(7, relationshipGroup_);
      }
      if (typeId_ != 0L) {
        output.writeInt64(8, typeId_);
      }
      if (characteristicTypeId_ != 0L) {
        output.writeInt64(9, characteristicTypeId_);
      }
      if (modifierId_ != 0L) {
        output.writeInt64(10, modifierId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (effectiveTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEffectiveTime());
      }
      if (active_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, active_);
      }
      if (moduleId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, moduleId_);
      }
      if (sourceId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, sourceId_);
      }
      if (destinationId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, destinationId_);
      }
      if (relationshipGroup_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, relationshipGroup_);
      }
      if (typeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, typeId_);
      }
      if (characteristicTypeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, characteristicTypeId_);
      }
      if (modifierId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, modifierId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.Relationship)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.Relationship other = (com.eldrix.terminology.snomedct.Protos.Relationship) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (hasEffectiveTime() == other.hasEffectiveTime());
      if (hasEffectiveTime()) {
        result = result && getEffectiveTime()
            .equals(other.getEffectiveTime());
      }
      result = result && (getActive()
          == other.getActive());
      result = result && (getModuleId()
          == other.getModuleId());
      result = result && (getSourceId()
          == other.getSourceId());
      result = result && (getDestinationId()
          == other.getDestinationId());
      result = result && (getRelationshipGroup()
          == other.getRelationshipGroup());
      result = result && (getTypeId()
          == other.getTypeId());
      result = result && (getCharacteristicTypeId()
          == other.getCharacteristicTypeId());
      result = result && (getModifierId()
          == other.getModifierId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasEffectiveTime()) {
        hash = (37 * hash) + EFFECTIVE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveTime().hashCode();
      }
      hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActive());
      hash = (37 * hash) + MODULE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getModuleId());
      hash = (37 * hash) + SOURCE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSourceId());
      hash = (37 * hash) + DESTINATION_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDestinationId());
      hash = (37 * hash) + RELATIONSHIP_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRelationshipGroup());
      hash = (37 * hash) + TYPE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTypeId());
      hash = (37 * hash) + CHARACTERISTIC_TYPE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCharacteristicTypeId());
      hash = (37 * hash) + MODIFIER_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getModifierId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.Relationship parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.Relationship prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Relationship defines a relationship between two concepts as a type itself defined as a concept
     * </pre>
     *
     * Protobuf type {@code snomed.Relationship}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.Relationship)
        com.eldrix.terminology.snomedct.Protos.RelationshipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Relationship_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Relationship_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.Relationship.class, com.eldrix.terminology.snomedct.Protos.Relationship.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.Relationship.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = null;
        } else {
          effectiveTime_ = null;
          effectiveTimeBuilder_ = null;
        }
        active_ = false;

        moduleId_ = 0L;

        sourceId_ = 0L;

        destinationId_ = 0L;

        relationshipGroup_ = 0L;

        typeId_ = 0L;

        characteristicTypeId_ = 0L;

        modifierId_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_Relationship_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.Relationship getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.Relationship.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.Relationship build() {
        com.eldrix.terminology.snomedct.Protos.Relationship result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.Relationship buildPartial() {
        com.eldrix.terminology.snomedct.Protos.Relationship result = new com.eldrix.terminology.snomedct.Protos.Relationship(this);
        result.id_ = id_;
        if (effectiveTimeBuilder_ == null) {
          result.effectiveTime_ = effectiveTime_;
        } else {
          result.effectiveTime_ = effectiveTimeBuilder_.build();
        }
        result.active_ = active_;
        result.moduleId_ = moduleId_;
        result.sourceId_ = sourceId_;
        result.destinationId_ = destinationId_;
        result.relationshipGroup_ = relationshipGroup_;
        result.typeId_ = typeId_;
        result.characteristicTypeId_ = characteristicTypeId_;
        result.modifierId_ = modifierId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.Relationship) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.Relationship)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.Relationship other) {
        if (other == com.eldrix.terminology.snomedct.Protos.Relationship.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasEffectiveTime()) {
          mergeEffectiveTime(other.getEffectiveTime());
        }
        if (other.getActive() != false) {
          setActive(other.getActive());
        }
        if (other.getModuleId() != 0L) {
          setModuleId(other.getModuleId());
        }
        if (other.getSourceId() != 0L) {
          setSourceId(other.getSourceId());
        }
        if (other.getDestinationId() != 0L) {
          setDestinationId(other.getDestinationId());
        }
        if (other.getRelationshipGroup() != 0L) {
          setRelationshipGroup(other.getRelationshipGroup());
        }
        if (other.getTypeId() != 0L) {
          setTypeId(other.getTypeId());
        }
        if (other.getCharacteristicTypeId() != 0L) {
          setCharacteristicTypeId(other.getCharacteristicTypeId());
        }
        if (other.getModifierId() != 0L) {
          setModifierId(other.getModifierId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.Relationship parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.Relationship) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       * Uniquely identifies the relationship.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * Uniquely identifies the relationship.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Uniquely identifies the relationship.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp effectiveTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> effectiveTimeBuilder_;
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public boolean hasEffectiveTime() {
        return effectiveTimeBuilder_ != null || effectiveTime_ != null;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.Timestamp getEffectiveTime() {
        if (effectiveTimeBuilder_ == null) {
          return effectiveTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
        } else {
          return effectiveTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder setEffectiveTime(com.google.protobuf.Timestamp value) {
        if (effectiveTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveTime_ = value;
          onChanged();
        } else {
          effectiveTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder setEffectiveTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = builderForValue.build();
          onChanged();
        } else {
          effectiveTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder mergeEffectiveTime(com.google.protobuf.Timestamp value) {
        if (effectiveTimeBuilder_ == null) {
          if (effectiveTime_ != null) {
            effectiveTime_ =
              com.google.protobuf.Timestamp.newBuilder(effectiveTime_).mergeFrom(value).buildPartial();
          } else {
            effectiveTime_ = value;
          }
          onChanged();
        } else {
          effectiveTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder clearEffectiveTime() {
        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = null;
          onChanged();
        } else {
          effectiveTime_ = null;
          effectiveTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEffectiveTimeBuilder() {
        
        onChanged();
        return getEffectiveTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder() {
        if (effectiveTimeBuilder_ != null) {
          return effectiveTimeBuilder_.getMessageOrBuilder();
        } else {
          return effectiveTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
        }
      }
      /**
       * <pre>
       * Specifies the inclusive date at which the component version's state became the then current valid state of the component
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEffectiveTimeFieldBuilder() {
        if (effectiveTimeBuilder_ == null) {
          effectiveTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEffectiveTime(),
                  getParentForChildren(),
                  isClean());
          effectiveTime_ = null;
        }
        return effectiveTimeBuilder_;
      }

      private boolean active_ ;
      /**
       * <pre>
       * Specifies whether the state of the relationship was active or inactive from the nominal release date specified by the effectiveTime field.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public boolean getActive() {
        return active_;
      }
      /**
       * <pre>
       * Specifies whether the state of the relationship was active or inactive from the nominal release date specified by the effectiveTime field.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public Builder setActive(boolean value) {
        
        active_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies whether the state of the relationship was active or inactive from the nominal release date specified by the effectiveTime field.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public Builder clearActive() {
        
        active_ = false;
        onChanged();
        return this;
      }

      private long moduleId_ ;
      /**
       * <pre>
       * Identifies the relationship version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public long getModuleId() {
        return moduleId_;
      }
      /**
       * <pre>
       * Identifies the relationship version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public Builder setModuleId(long value) {
        
        moduleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the relationship version's module. Set to a child of 900000000000443000 |Module|within the metadata hierarchy.
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public Builder clearModuleId() {
        
        moduleId_ = 0L;
        onChanged();
        return this;
      }

      private long sourceId_ ;
      /**
       * <pre>
       * Identifies the source concept of the relationship version. That is the concept defined by this relationship. Set to the identifier of a concept. in the Concept File.
       * </pre>
       *
       * <code>int64 source_id = 5;</code>
       */
      public long getSourceId() {
        return sourceId_;
      }
      /**
       * <pre>
       * Identifies the source concept of the relationship version. That is the concept defined by this relationship. Set to the identifier of a concept. in the Concept File.
       * </pre>
       *
       * <code>int64 source_id = 5;</code>
       */
      public Builder setSourceId(long value) {
        
        sourceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the source concept of the relationship version. That is the concept defined by this relationship. Set to the identifier of a concept. in the Concept File.
       * </pre>
       *
       * <code>int64 source_id = 5;</code>
       */
      public Builder clearSourceId() {
        
        sourceId_ = 0L;
        onChanged();
        return this;
      }

      private long destinationId_ ;
      /**
       * <pre>
       * Identifies the concept that is the destination of the relationship version.
       * </pre>
       *
       * <code>int64 destination_id = 6;</code>
       */
      public long getDestinationId() {
        return destinationId_;
      }
      /**
       * <pre>
       * Identifies the concept that is the destination of the relationship version.
       * </pre>
       *
       * <code>int64 destination_id = 6;</code>
       */
      public Builder setDestinationId(long value) {
        
        destinationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the concept that is the destination of the relationship version.
       * </pre>
       *
       * <code>int64 destination_id = 6;</code>
       */
      public Builder clearDestinationId() {
        
        destinationId_ = 0L;
        onChanged();
        return this;
      }

      private long relationshipGroup_ ;
      /**
       * <pre>
       * Groups together relationship versions that are part of a logically associated relationshipGroup. All active Relationship records with the same relationshipGroup number and sourceId are grouped in this way.
       * </pre>
       *
       * <code>int64 relationship_group = 7;</code>
       */
      public long getRelationshipGroup() {
        return relationshipGroup_;
      }
      /**
       * <pre>
       * Groups together relationship versions that are part of a logically associated relationshipGroup. All active Relationship records with the same relationshipGroup number and sourceId are grouped in this way.
       * </pre>
       *
       * <code>int64 relationship_group = 7;</code>
       */
      public Builder setRelationshipGroup(long value) {
        
        relationshipGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Groups together relationship versions that are part of a logically associated relationshipGroup. All active Relationship records with the same relationshipGroup number and sourceId are grouped in this way.
       * </pre>
       *
       * <code>int64 relationship_group = 7;</code>
       */
      public Builder clearRelationshipGroup() {
        
        relationshipGroup_ = 0L;
        onChanged();
        return this;
      }

      private long typeId_ ;
      /**
       * <pre>
       * Identifies the concept that represent the defining attribute (or relationship type) represented by this relationship version.
       * </pre>
       *
       * <code>int64 type_id = 8;</code>
       */
      public long getTypeId() {
        return typeId_;
      }
      /**
       * <pre>
       * Identifies the concept that represent the defining attribute (or relationship type) represented by this relationship version.
       * </pre>
       *
       * <code>int64 type_id = 8;</code>
       */
      public Builder setTypeId(long value) {
        
        typeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the concept that represent the defining attribute (or relationship type) represented by this relationship version.
       * </pre>
       *
       * <code>int64 type_id = 8;</code>
       */
      public Builder clearTypeId() {
        
        typeId_ = 0L;
        onChanged();
        return this;
      }

      private long characteristicTypeId_ ;
      /**
       * <pre>
       * A concept enumeration value that identifies the characteristic type of the relationship version (i.e. whether the relationship version is defining, qualifying, etc.) This field is set to a descendant of 900000000000449001 |Characteristic type|in the metadata hierarchy.
       * </pre>
       *
       * <code>int64 characteristic_type_id = 9;</code>
       */
      public long getCharacteristicTypeId() {
        return characteristicTypeId_;
      }
      /**
       * <pre>
       * A concept enumeration value that identifies the characteristic type of the relationship version (i.e. whether the relationship version is defining, qualifying, etc.) This field is set to a descendant of 900000000000449001 |Characteristic type|in the metadata hierarchy.
       * </pre>
       *
       * <code>int64 characteristic_type_id = 9;</code>
       */
      public Builder setCharacteristicTypeId(long value) {
        
        characteristicTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A concept enumeration value that identifies the characteristic type of the relationship version (i.e. whether the relationship version is defining, qualifying, etc.) This field is set to a descendant of 900000000000449001 |Characteristic type|in the metadata hierarchy.
       * </pre>
       *
       * <code>int64 characteristic_type_id = 9;</code>
       */
      public Builder clearCharacteristicTypeId() {
        
        characteristicTypeId_ = 0L;
        onChanged();
        return this;
      }

      private long modifierId_ ;
      /**
       * <pre>
       * Ignore. A concept enumeration value that identifies the type of Description Logic (DL) restriction (some, all, etc.).  
       * </pre>
       *
       * <code>int64 modifier_id = 10;</code>
       */
      public long getModifierId() {
        return modifierId_;
      }
      /**
       * <pre>
       * Ignore. A concept enumeration value that identifies the type of Description Logic (DL) restriction (some, all, etc.).  
       * </pre>
       *
       * <code>int64 modifier_id = 10;</code>
       */
      public Builder setModifierId(long value) {
        
        modifierId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ignore. A concept enumeration value that identifies the type of Description Logic (DL) restriction (some, all, etc.).  
       * </pre>
       *
       * <code>int64 modifier_id = 10;</code>
       */
      public Builder clearModifierId() {
        
        modifierId_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.Relationship)
    }

    // @@protoc_insertion_point(class_scope:snomed.Relationship)
    private static final com.eldrix.terminology.snomedct.Protos.Relationship DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.Relationship();
    }

    public static com.eldrix.terminology.snomedct.Protos.Relationship getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Relationship>
        PARSER = new com.google.protobuf.AbstractParser<Relationship>() {
      public Relationship parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Relationship(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Relationship> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Relationship> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.Relationship getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReferenceSetItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.ReferenceSetItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A 128 bit unsigned Integer, uniquely identifying the reference set member.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * A 128 bit unsigned Integer, uniquely identifying the reference set member.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Specifies the inclusive date at which this change becomes effective.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    boolean hasEffectiveTime();
    /**
     * <pre>
     * Specifies the inclusive date at which this change becomes effective.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    com.google.protobuf.Timestamp getEffectiveTime();
    /**
     * <pre>
     * Specifies the inclusive date at which this change becomes effective.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder();

    /**
     * <pre>
     * Specifies whether the member's state was active or inactive from the nominal release date specified by the effectiveTime field.
     * </pre>
     *
     * <code>bool active = 3;</code>
     */
    boolean getActive();

    /**
     * <pre>
     * Identifies the member version's module. Set to a child of 900000000000443000 |Module| within the metadata hierarchy .
     * </pre>
     *
     * <code>int64 module_id = 4;</code>
     */
    long getModuleId();

    /**
     * <pre>
     * Uniquely identifies the reference set that this extension row is part of. Set to a descendant of 900000000000455006 |Reference set| within the metadata hierarchy .
     * </pre>
     *
     * <code>int64 refset_id = 5;</code>
     */
    long getRefsetId();

    /**
     * <pre>
     * A reference to the SNOMED CT component to be included in the reference set.
     * </pre>
     *
     * <code>int64 referenced_component_id = 6;</code>
     */
    long getReferencedComponentId();

    /**
     * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
     */
    boolean hasRefsetDescriptor();
    /**
     * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
     */
    com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet getRefsetDescriptor();
    /**
     * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
     */
    com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSetOrBuilder getRefsetDescriptorOrBuilder();

    /**
     * <code>.snomed.SimpleReferenceSet simple = 8;</code>
     */
    boolean hasSimple();
    /**
     * <code>.snomed.SimpleReferenceSet simple = 8;</code>
     */
    com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet getSimple();
    /**
     * <code>.snomed.SimpleReferenceSet simple = 8;</code>
     */
    com.eldrix.terminology.snomedct.Protos.SimpleReferenceSetOrBuilder getSimpleOrBuilder();

    /**
     * <code>.snomed.LanguageReferenceSet language = 9;</code>
     */
    boolean hasLanguage();
    /**
     * <code>.snomed.LanguageReferenceSet language = 9;</code>
     */
    com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet getLanguage();
    /**
     * <code>.snomed.LanguageReferenceSet language = 9;</code>
     */
    com.eldrix.terminology.snomedct.Protos.LanguageReferenceSetOrBuilder getLanguageOrBuilder();

    /**
     * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
     */
    boolean hasSimpleMap();
    /**
     * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
     */
    com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet getSimpleMap();
    /**
     * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
     */
    com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSetOrBuilder getSimpleMapOrBuilder();

    public com.eldrix.terminology.snomedct.Protos.ReferenceSetItem.BodyCase getBodyCase();
  }
  /**
   * <pre>
   * ReferenceSet support customization and enhancement of SNOMED CT content. These include representation of subsets,
   * language preferences maps for or from other code systems.
   * There are multiple reference set types which extend this structure
   * In the specification, the referenced component ID can be a SCT identifier or a UUID which is... problematic.
   * In this structure, the referenced component ID is a SCT identifier... only. For now.
   * Fortunately, in concrete types of reference set ("patterns"), it is made explicit.
   * </pre>
   *
   * Protobuf type {@code snomed.ReferenceSetItem}
   */
  public  static final class ReferenceSetItem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.ReferenceSetItem)
      ReferenceSetItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReferenceSetItem.newBuilder() to construct.
    private ReferenceSetItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReferenceSetItem() {
      id_ = "";
      active_ = false;
      moduleId_ = 0L;
      refsetId_ = 0L;
      referencedComponentId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReferenceSetItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (effectiveTime_ != null) {
                subBuilder = effectiveTime_.toBuilder();
              }
              effectiveTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveTime_);
                effectiveTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              active_ = input.readBool();
              break;
            }
            case 32: {

              moduleId_ = input.readInt64();
              break;
            }
            case 40: {

              refsetId_ = input.readInt64();
              break;
            }
            case 48: {

              referencedComponentId_ = input.readInt64();
              break;
            }
            case 58: {
              com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.Builder subBuilder = null;
              if (bodyCase_ == 7) {
                subBuilder = ((com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_).toBuilder();
              }
              body_ =
                  input.readMessage(com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_);
                body_ = subBuilder.buildPartial();
              }
              bodyCase_ = 7;
              break;
            }
            case 66: {
              com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.Builder subBuilder = null;
              if (bodyCase_ == 8) {
                subBuilder = ((com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_).toBuilder();
              }
              body_ =
                  input.readMessage(com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_);
                body_ = subBuilder.buildPartial();
              }
              bodyCase_ = 8;
              break;
            }
            case 74: {
              com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.Builder subBuilder = null;
              if (bodyCase_ == 9) {
                subBuilder = ((com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_).toBuilder();
              }
              body_ =
                  input.readMessage(com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_);
                body_ = subBuilder.buildPartial();
              }
              bodyCase_ = 9;
              break;
            }
            case 82: {
              com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.Builder subBuilder = null;
              if (bodyCase_ == 10) {
                subBuilder = ((com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_).toBuilder();
              }
              body_ =
                  input.readMessage(com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_);
                body_ = subBuilder.buildPartial();
              }
              bodyCase_ = 10;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ReferenceSetItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ReferenceSetItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.ReferenceSetItem.class, com.eldrix.terminology.snomedct.Protos.ReferenceSetItem.Builder.class);
    }

    private int bodyCase_ = 0;
    private java.lang.Object body_;
    public enum BodyCase
        implements com.google.protobuf.Internal.EnumLite {
      REFSET_DESCRIPTOR(7),
      SIMPLE(8),
      LANGUAGE(9),
      SIMPLE_MAP(10),
      BODY_NOT_SET(0);
      private final int value;
      private BodyCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static BodyCase valueOf(int value) {
        return forNumber(value);
      }

      public static BodyCase forNumber(int value) {
        switch (value) {
          case 7: return REFSET_DESCRIPTOR;
          case 8: return SIMPLE;
          case 9: return LANGUAGE;
          case 10: return SIMPLE_MAP;
          case 0: return BODY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public BodyCase
    getBodyCase() {
      return BodyCase.forNumber(
          bodyCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * A 128 bit unsigned Integer, uniquely identifying the reference set member.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A 128 bit unsigned Integer, uniquely identifying the reference set member.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EFFECTIVE_TIME_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp effectiveTime_;
    /**
     * <pre>
     * Specifies the inclusive date at which this change becomes effective.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public boolean hasEffectiveTime() {
      return effectiveTime_ != null;
    }
    /**
     * <pre>
     * Specifies the inclusive date at which this change becomes effective.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public com.google.protobuf.Timestamp getEffectiveTime() {
      return effectiveTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
    }
    /**
     * <pre>
     * Specifies the inclusive date at which this change becomes effective.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp effective_time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder() {
      return getEffectiveTime();
    }

    public static final int ACTIVE_FIELD_NUMBER = 3;
    private boolean active_;
    /**
     * <pre>
     * Specifies whether the member's state was active or inactive from the nominal release date specified by the effectiveTime field.
     * </pre>
     *
     * <code>bool active = 3;</code>
     */
    public boolean getActive() {
      return active_;
    }

    public static final int MODULE_ID_FIELD_NUMBER = 4;
    private long moduleId_;
    /**
     * <pre>
     * Identifies the member version's module. Set to a child of 900000000000443000 |Module| within the metadata hierarchy .
     * </pre>
     *
     * <code>int64 module_id = 4;</code>
     */
    public long getModuleId() {
      return moduleId_;
    }

    public static final int REFSET_ID_FIELD_NUMBER = 5;
    private long refsetId_;
    /**
     * <pre>
     * Uniquely identifies the reference set that this extension row is part of. Set to a descendant of 900000000000455006 |Reference set| within the metadata hierarchy .
     * </pre>
     *
     * <code>int64 refset_id = 5;</code>
     */
    public long getRefsetId() {
      return refsetId_;
    }

    public static final int REFERENCED_COMPONENT_ID_FIELD_NUMBER = 6;
    private long referencedComponentId_;
    /**
     * <pre>
     * A reference to the SNOMED CT component to be included in the reference set.
     * </pre>
     *
     * <code>int64 referenced_component_id = 6;</code>
     */
    public long getReferencedComponentId() {
      return referencedComponentId_;
    }

    public static final int REFSET_DESCRIPTOR_FIELD_NUMBER = 7;
    /**
     * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
     */
    public boolean hasRefsetDescriptor() {
      return bodyCase_ == 7;
    }
    /**
     * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet getRefsetDescriptor() {
      if (bodyCase_ == 7) {
         return (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_;
      }
      return com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance();
    }
    /**
     * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSetOrBuilder getRefsetDescriptorOrBuilder() {
      if (bodyCase_ == 7) {
         return (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_;
      }
      return com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance();
    }

    public static final int SIMPLE_FIELD_NUMBER = 8;
    /**
     * <code>.snomed.SimpleReferenceSet simple = 8;</code>
     */
    public boolean hasSimple() {
      return bodyCase_ == 8;
    }
    /**
     * <code>.snomed.SimpleReferenceSet simple = 8;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet getSimple() {
      if (bodyCase_ == 8) {
         return (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_;
      }
      return com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance();
    }
    /**
     * <code>.snomed.SimpleReferenceSet simple = 8;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSetOrBuilder getSimpleOrBuilder() {
      if (bodyCase_ == 8) {
         return (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_;
      }
      return com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance();
    }

    public static final int LANGUAGE_FIELD_NUMBER = 9;
    /**
     * <code>.snomed.LanguageReferenceSet language = 9;</code>
     */
    public boolean hasLanguage() {
      return bodyCase_ == 9;
    }
    /**
     * <code>.snomed.LanguageReferenceSet language = 9;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet getLanguage() {
      if (bodyCase_ == 9) {
         return (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_;
      }
      return com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance();
    }
    /**
     * <code>.snomed.LanguageReferenceSet language = 9;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSetOrBuilder getLanguageOrBuilder() {
      if (bodyCase_ == 9) {
         return (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_;
      }
      return com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance();
    }

    public static final int SIMPLE_MAP_FIELD_NUMBER = 10;
    /**
     * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
     */
    public boolean hasSimpleMap() {
      return bodyCase_ == 10;
    }
    /**
     * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet getSimpleMap() {
      if (bodyCase_ == 10) {
         return (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_;
      }
      return com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance();
    }
    /**
     * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSetOrBuilder getSimpleMapOrBuilder() {
      if (bodyCase_ == 10) {
         return (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_;
      }
      return com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (effectiveTime_ != null) {
        output.writeMessage(2, getEffectiveTime());
      }
      if (active_ != false) {
        output.writeBool(3, active_);
      }
      if (moduleId_ != 0L) {
        output.writeInt64(4, moduleId_);
      }
      if (refsetId_ != 0L) {
        output.writeInt64(5, refsetId_);
      }
      if (referencedComponentId_ != 0L) {
        output.writeInt64(6, referencedComponentId_);
      }
      if (bodyCase_ == 7) {
        output.writeMessage(7, (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_);
      }
      if (bodyCase_ == 8) {
        output.writeMessage(8, (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_);
      }
      if (bodyCase_ == 9) {
        output.writeMessage(9, (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_);
      }
      if (bodyCase_ == 10) {
        output.writeMessage(10, (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (effectiveTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEffectiveTime());
      }
      if (active_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, active_);
      }
      if (moduleId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, moduleId_);
      }
      if (refsetId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, refsetId_);
      }
      if (referencedComponentId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, referencedComponentId_);
      }
      if (bodyCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_);
      }
      if (bodyCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_);
      }
      if (bodyCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_);
      }
      if (bodyCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.ReferenceSetItem)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.ReferenceSetItem other = (com.eldrix.terminology.snomedct.Protos.ReferenceSetItem) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (hasEffectiveTime() == other.hasEffectiveTime());
      if (hasEffectiveTime()) {
        result = result && getEffectiveTime()
            .equals(other.getEffectiveTime());
      }
      result = result && (getActive()
          == other.getActive());
      result = result && (getModuleId()
          == other.getModuleId());
      result = result && (getRefsetId()
          == other.getRefsetId());
      result = result && (getReferencedComponentId()
          == other.getReferencedComponentId());
      result = result && getBodyCase().equals(
          other.getBodyCase());
      if (!result) return false;
      switch (bodyCase_) {
        case 7:
          result = result && getRefsetDescriptor()
              .equals(other.getRefsetDescriptor());
          break;
        case 8:
          result = result && getSimple()
              .equals(other.getSimple());
          break;
        case 9:
          result = result && getLanguage()
              .equals(other.getLanguage());
          break;
        case 10:
          result = result && getSimpleMap()
              .equals(other.getSimpleMap());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasEffectiveTime()) {
        hash = (37 * hash) + EFFECTIVE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveTime().hashCode();
      }
      hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActive());
      hash = (37 * hash) + MODULE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getModuleId());
      hash = (37 * hash) + REFSET_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRefsetId());
      hash = (37 * hash) + REFERENCED_COMPONENT_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getReferencedComponentId());
      switch (bodyCase_) {
        case 7:
          hash = (37 * hash) + REFSET_DESCRIPTOR_FIELD_NUMBER;
          hash = (53 * hash) + getRefsetDescriptor().hashCode();
          break;
        case 8:
          hash = (37 * hash) + SIMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getSimple().hashCode();
          break;
        case 9:
          hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
          hash = (53 * hash) + getLanguage().hashCode();
          break;
        case 10:
          hash = (37 * hash) + SIMPLE_MAP_FIELD_NUMBER;
          hash = (53 * hash) + getSimpleMap().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.ReferenceSetItem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ReferenceSet support customization and enhancement of SNOMED CT content. These include representation of subsets,
     * language preferences maps for or from other code systems.
     * There are multiple reference set types which extend this structure
     * In the specification, the referenced component ID can be a SCT identifier or a UUID which is... problematic.
     * In this structure, the referenced component ID is a SCT identifier... only. For now.
     * Fortunately, in concrete types of reference set ("patterns"), it is made explicit.
     * </pre>
     *
     * Protobuf type {@code snomed.ReferenceSetItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.ReferenceSetItem)
        com.eldrix.terminology.snomedct.Protos.ReferenceSetItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ReferenceSetItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ReferenceSetItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.ReferenceSetItem.class, com.eldrix.terminology.snomedct.Protos.ReferenceSetItem.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.ReferenceSetItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = null;
        } else {
          effectiveTime_ = null;
          effectiveTimeBuilder_ = null;
        }
        active_ = false;

        moduleId_ = 0L;

        refsetId_ = 0L;

        referencedComponentId_ = 0L;

        bodyCase_ = 0;
        body_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ReferenceSetItem_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.ReferenceSetItem getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.ReferenceSetItem.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.ReferenceSetItem build() {
        com.eldrix.terminology.snomedct.Protos.ReferenceSetItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.ReferenceSetItem buildPartial() {
        com.eldrix.terminology.snomedct.Protos.ReferenceSetItem result = new com.eldrix.terminology.snomedct.Protos.ReferenceSetItem(this);
        result.id_ = id_;
        if (effectiveTimeBuilder_ == null) {
          result.effectiveTime_ = effectiveTime_;
        } else {
          result.effectiveTime_ = effectiveTimeBuilder_.build();
        }
        result.active_ = active_;
        result.moduleId_ = moduleId_;
        result.refsetId_ = refsetId_;
        result.referencedComponentId_ = referencedComponentId_;
        if (bodyCase_ == 7) {
          if (refsetDescriptorBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = refsetDescriptorBuilder_.build();
          }
        }
        if (bodyCase_ == 8) {
          if (simpleBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = simpleBuilder_.build();
          }
        }
        if (bodyCase_ == 9) {
          if (languageBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = languageBuilder_.build();
          }
        }
        if (bodyCase_ == 10) {
          if (simpleMapBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = simpleMapBuilder_.build();
          }
        }
        result.bodyCase_ = bodyCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.ReferenceSetItem) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.ReferenceSetItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.ReferenceSetItem other) {
        if (other == com.eldrix.terminology.snomedct.Protos.ReferenceSetItem.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasEffectiveTime()) {
          mergeEffectiveTime(other.getEffectiveTime());
        }
        if (other.getActive() != false) {
          setActive(other.getActive());
        }
        if (other.getModuleId() != 0L) {
          setModuleId(other.getModuleId());
        }
        if (other.getRefsetId() != 0L) {
          setRefsetId(other.getRefsetId());
        }
        if (other.getReferencedComponentId() != 0L) {
          setReferencedComponentId(other.getReferencedComponentId());
        }
        switch (other.getBodyCase()) {
          case REFSET_DESCRIPTOR: {
            mergeRefsetDescriptor(other.getRefsetDescriptor());
            break;
          }
          case SIMPLE: {
            mergeSimple(other.getSimple());
            break;
          }
          case LANGUAGE: {
            mergeLanguage(other.getLanguage());
            break;
          }
          case SIMPLE_MAP: {
            mergeSimpleMap(other.getSimpleMap());
            break;
          }
          case BODY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.ReferenceSetItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.ReferenceSetItem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bodyCase_ = 0;
      private java.lang.Object body_;
      public BodyCase
          getBodyCase() {
        return BodyCase.forNumber(
            bodyCase_);
      }

      public Builder clearBody() {
        bodyCase_ = 0;
        body_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A 128 bit unsigned Integer, uniquely identifying the reference set member.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A 128 bit unsigned Integer, uniquely identifying the reference set member.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A 128 bit unsigned Integer, uniquely identifying the reference set member.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A 128 bit unsigned Integer, uniquely identifying the reference set member.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A 128 bit unsigned Integer, uniquely identifying the reference set member.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp effectiveTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> effectiveTimeBuilder_;
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public boolean hasEffectiveTime() {
        return effectiveTimeBuilder_ != null || effectiveTime_ != null;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.Timestamp getEffectiveTime() {
        if (effectiveTimeBuilder_ == null) {
          return effectiveTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
        } else {
          return effectiveTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder setEffectiveTime(com.google.protobuf.Timestamp value) {
        if (effectiveTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveTime_ = value;
          onChanged();
        } else {
          effectiveTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder setEffectiveTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = builderForValue.build();
          onChanged();
        } else {
          effectiveTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder mergeEffectiveTime(com.google.protobuf.Timestamp value) {
        if (effectiveTimeBuilder_ == null) {
          if (effectiveTime_ != null) {
            effectiveTime_ =
              com.google.protobuf.Timestamp.newBuilder(effectiveTime_).mergeFrom(value).buildPartial();
          } else {
            effectiveTime_ = value;
          }
          onChanged();
        } else {
          effectiveTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public Builder clearEffectiveTime() {
        if (effectiveTimeBuilder_ == null) {
          effectiveTime_ = null;
          onChanged();
        } else {
          effectiveTime_ = null;
          effectiveTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEffectiveTimeBuilder() {
        
        onChanged();
        return getEffectiveTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEffectiveTimeOrBuilder() {
        if (effectiveTimeBuilder_ != null) {
          return effectiveTimeBuilder_.getMessageOrBuilder();
        } else {
          return effectiveTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : effectiveTime_;
        }
      }
      /**
       * <pre>
       * Specifies the inclusive date at which this change becomes effective.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp effective_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEffectiveTimeFieldBuilder() {
        if (effectiveTimeBuilder_ == null) {
          effectiveTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEffectiveTime(),
                  getParentForChildren(),
                  isClean());
          effectiveTime_ = null;
        }
        return effectiveTimeBuilder_;
      }

      private boolean active_ ;
      /**
       * <pre>
       * Specifies whether the member's state was active or inactive from the nominal release date specified by the effectiveTime field.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public boolean getActive() {
        return active_;
      }
      /**
       * <pre>
       * Specifies whether the member's state was active or inactive from the nominal release date specified by the effectiveTime field.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public Builder setActive(boolean value) {
        
        active_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies whether the member's state was active or inactive from the nominal release date specified by the effectiveTime field.
       * </pre>
       *
       * <code>bool active = 3;</code>
       */
      public Builder clearActive() {
        
        active_ = false;
        onChanged();
        return this;
      }

      private long moduleId_ ;
      /**
       * <pre>
       * Identifies the member version's module. Set to a child of 900000000000443000 |Module| within the metadata hierarchy .
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public long getModuleId() {
        return moduleId_;
      }
      /**
       * <pre>
       * Identifies the member version's module. Set to a child of 900000000000443000 |Module| within the metadata hierarchy .
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public Builder setModuleId(long value) {
        
        moduleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the member version's module. Set to a child of 900000000000443000 |Module| within the metadata hierarchy .
       * </pre>
       *
       * <code>int64 module_id = 4;</code>
       */
      public Builder clearModuleId() {
        
        moduleId_ = 0L;
        onChanged();
        return this;
      }

      private long refsetId_ ;
      /**
       * <pre>
       * Uniquely identifies the reference set that this extension row is part of. Set to a descendant of 900000000000455006 |Reference set| within the metadata hierarchy .
       * </pre>
       *
       * <code>int64 refset_id = 5;</code>
       */
      public long getRefsetId() {
        return refsetId_;
      }
      /**
       * <pre>
       * Uniquely identifies the reference set that this extension row is part of. Set to a descendant of 900000000000455006 |Reference set| within the metadata hierarchy .
       * </pre>
       *
       * <code>int64 refset_id = 5;</code>
       */
      public Builder setRefsetId(long value) {
        
        refsetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Uniquely identifies the reference set that this extension row is part of. Set to a descendant of 900000000000455006 |Reference set| within the metadata hierarchy .
       * </pre>
       *
       * <code>int64 refset_id = 5;</code>
       */
      public Builder clearRefsetId() {
        
        refsetId_ = 0L;
        onChanged();
        return this;
      }

      private long referencedComponentId_ ;
      /**
       * <pre>
       * A reference to the SNOMED CT component to be included in the reference set.
       * </pre>
       *
       * <code>int64 referenced_component_id = 6;</code>
       */
      public long getReferencedComponentId() {
        return referencedComponentId_;
      }
      /**
       * <pre>
       * A reference to the SNOMED CT component to be included in the reference set.
       * </pre>
       *
       * <code>int64 referenced_component_id = 6;</code>
       */
      public Builder setReferencedComponentId(long value) {
        
        referencedComponentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A reference to the SNOMED CT component to be included in the reference set.
       * </pre>
       *
       * <code>int64 referenced_component_id = 6;</code>
       */
      public Builder clearReferencedComponentId() {
        
        referencedComponentId_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet, com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSetOrBuilder> refsetDescriptorBuilder_;
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      public boolean hasRefsetDescriptor() {
        return bodyCase_ == 7;
      }
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet getRefsetDescriptor() {
        if (refsetDescriptorBuilder_ == null) {
          if (bodyCase_ == 7) {
            return (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_;
          }
          return com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance();
        } else {
          if (bodyCase_ == 7) {
            return refsetDescriptorBuilder_.getMessage();
          }
          return com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance();
        }
      }
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      public Builder setRefsetDescriptor(com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet value) {
        if (refsetDescriptorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          body_ = value;
          onChanged();
        } else {
          refsetDescriptorBuilder_.setMessage(value);
        }
        bodyCase_ = 7;
        return this;
      }
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      public Builder setRefsetDescriptor(
          com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.Builder builderForValue) {
        if (refsetDescriptorBuilder_ == null) {
          body_ = builderForValue.build();
          onChanged();
        } else {
          refsetDescriptorBuilder_.setMessage(builderForValue.build());
        }
        bodyCase_ = 7;
        return this;
      }
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      public Builder mergeRefsetDescriptor(com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet value) {
        if (refsetDescriptorBuilder_ == null) {
          if (bodyCase_ == 7 &&
              body_ != com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance()) {
            body_ = com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.newBuilder((com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_)
                .mergeFrom(value).buildPartial();
          } else {
            body_ = value;
          }
          onChanged();
        } else {
          if (bodyCase_ == 7) {
            refsetDescriptorBuilder_.mergeFrom(value);
          }
          refsetDescriptorBuilder_.setMessage(value);
        }
        bodyCase_ = 7;
        return this;
      }
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      public Builder clearRefsetDescriptor() {
        if (refsetDescriptorBuilder_ == null) {
          if (bodyCase_ == 7) {
            bodyCase_ = 0;
            body_ = null;
            onChanged();
          }
        } else {
          if (bodyCase_ == 7) {
            bodyCase_ = 0;
            body_ = null;
          }
          refsetDescriptorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.Builder getRefsetDescriptorBuilder() {
        return getRefsetDescriptorFieldBuilder().getBuilder();
      }
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSetOrBuilder getRefsetDescriptorOrBuilder() {
        if ((bodyCase_ == 7) && (refsetDescriptorBuilder_ != null)) {
          return refsetDescriptorBuilder_.getMessageOrBuilder();
        } else {
          if (bodyCase_ == 7) {
            return (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_;
          }
          return com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance();
        }
      }
      /**
       * <code>.snomed.RefSetDescriptorReferenceSet refset_descriptor = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet, com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSetOrBuilder> 
          getRefsetDescriptorFieldBuilder() {
        if (refsetDescriptorBuilder_ == null) {
          if (!(bodyCase_ == 7)) {
            body_ = com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance();
          }
          refsetDescriptorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet, com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSetOrBuilder>(
                  (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) body_,
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        bodyCase_ = 7;
        onChanged();;
        return refsetDescriptorBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet, com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.SimpleReferenceSetOrBuilder> simpleBuilder_;
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      public boolean hasSimple() {
        return bodyCase_ == 8;
      }
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet getSimple() {
        if (simpleBuilder_ == null) {
          if (bodyCase_ == 8) {
            return (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_;
          }
          return com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance();
        } else {
          if (bodyCase_ == 8) {
            return simpleBuilder_.getMessage();
          }
          return com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance();
        }
      }
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      public Builder setSimple(com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet value) {
        if (simpleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          body_ = value;
          onChanged();
        } else {
          simpleBuilder_.setMessage(value);
        }
        bodyCase_ = 8;
        return this;
      }
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      public Builder setSimple(
          com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.Builder builderForValue) {
        if (simpleBuilder_ == null) {
          body_ = builderForValue.build();
          onChanged();
        } else {
          simpleBuilder_.setMessage(builderForValue.build());
        }
        bodyCase_ = 8;
        return this;
      }
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      public Builder mergeSimple(com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet value) {
        if (simpleBuilder_ == null) {
          if (bodyCase_ == 8 &&
              body_ != com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance()) {
            body_ = com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.newBuilder((com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_)
                .mergeFrom(value).buildPartial();
          } else {
            body_ = value;
          }
          onChanged();
        } else {
          if (bodyCase_ == 8) {
            simpleBuilder_.mergeFrom(value);
          }
          simpleBuilder_.setMessage(value);
        }
        bodyCase_ = 8;
        return this;
      }
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      public Builder clearSimple() {
        if (simpleBuilder_ == null) {
          if (bodyCase_ == 8) {
            bodyCase_ = 0;
            body_ = null;
            onChanged();
          }
        } else {
          if (bodyCase_ == 8) {
            bodyCase_ = 0;
            body_ = null;
          }
          simpleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.Builder getSimpleBuilder() {
        return getSimpleFieldBuilder().getBuilder();
      }
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSetOrBuilder getSimpleOrBuilder() {
        if ((bodyCase_ == 8) && (simpleBuilder_ != null)) {
          return simpleBuilder_.getMessageOrBuilder();
        } else {
          if (bodyCase_ == 8) {
            return (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_;
          }
          return com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance();
        }
      }
      /**
       * <code>.snomed.SimpleReferenceSet simple = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet, com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.SimpleReferenceSetOrBuilder> 
          getSimpleFieldBuilder() {
        if (simpleBuilder_ == null) {
          if (!(bodyCase_ == 8)) {
            body_ = com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance();
          }
          simpleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet, com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.SimpleReferenceSetOrBuilder>(
                  (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) body_,
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        bodyCase_ = 8;
        onChanged();;
        return simpleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet, com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.LanguageReferenceSetOrBuilder> languageBuilder_;
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      public boolean hasLanguage() {
        return bodyCase_ == 9;
      }
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet getLanguage() {
        if (languageBuilder_ == null) {
          if (bodyCase_ == 9) {
            return (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_;
          }
          return com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance();
        } else {
          if (bodyCase_ == 9) {
            return languageBuilder_.getMessage();
          }
          return com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance();
        }
      }
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      public Builder setLanguage(com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet value) {
        if (languageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          body_ = value;
          onChanged();
        } else {
          languageBuilder_.setMessage(value);
        }
        bodyCase_ = 9;
        return this;
      }
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      public Builder setLanguage(
          com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.Builder builderForValue) {
        if (languageBuilder_ == null) {
          body_ = builderForValue.build();
          onChanged();
        } else {
          languageBuilder_.setMessage(builderForValue.build());
        }
        bodyCase_ = 9;
        return this;
      }
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      public Builder mergeLanguage(com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet value) {
        if (languageBuilder_ == null) {
          if (bodyCase_ == 9 &&
              body_ != com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance()) {
            body_ = com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.newBuilder((com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_)
                .mergeFrom(value).buildPartial();
          } else {
            body_ = value;
          }
          onChanged();
        } else {
          if (bodyCase_ == 9) {
            languageBuilder_.mergeFrom(value);
          }
          languageBuilder_.setMessage(value);
        }
        bodyCase_ = 9;
        return this;
      }
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      public Builder clearLanguage() {
        if (languageBuilder_ == null) {
          if (bodyCase_ == 9) {
            bodyCase_ = 0;
            body_ = null;
            onChanged();
          }
        } else {
          if (bodyCase_ == 9) {
            bodyCase_ = 0;
            body_ = null;
          }
          languageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.Builder getLanguageBuilder() {
        return getLanguageFieldBuilder().getBuilder();
      }
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSetOrBuilder getLanguageOrBuilder() {
        if ((bodyCase_ == 9) && (languageBuilder_ != null)) {
          return languageBuilder_.getMessageOrBuilder();
        } else {
          if (bodyCase_ == 9) {
            return (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_;
          }
          return com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance();
        }
      }
      /**
       * <code>.snomed.LanguageReferenceSet language = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet, com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.LanguageReferenceSetOrBuilder> 
          getLanguageFieldBuilder() {
        if (languageBuilder_ == null) {
          if (!(bodyCase_ == 9)) {
            body_ = com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance();
          }
          languageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet, com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.LanguageReferenceSetOrBuilder>(
                  (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) body_,
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        bodyCase_ = 9;
        onChanged();;
        return languageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet, com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSetOrBuilder> simpleMapBuilder_;
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      public boolean hasSimpleMap() {
        return bodyCase_ == 10;
      }
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet getSimpleMap() {
        if (simpleMapBuilder_ == null) {
          if (bodyCase_ == 10) {
            return (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_;
          }
          return com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance();
        } else {
          if (bodyCase_ == 10) {
            return simpleMapBuilder_.getMessage();
          }
          return com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance();
        }
      }
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      public Builder setSimpleMap(com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet value) {
        if (simpleMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          body_ = value;
          onChanged();
        } else {
          simpleMapBuilder_.setMessage(value);
        }
        bodyCase_ = 10;
        return this;
      }
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      public Builder setSimpleMap(
          com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.Builder builderForValue) {
        if (simpleMapBuilder_ == null) {
          body_ = builderForValue.build();
          onChanged();
        } else {
          simpleMapBuilder_.setMessage(builderForValue.build());
        }
        bodyCase_ = 10;
        return this;
      }
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      public Builder mergeSimpleMap(com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet value) {
        if (simpleMapBuilder_ == null) {
          if (bodyCase_ == 10 &&
              body_ != com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance()) {
            body_ = com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.newBuilder((com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_)
                .mergeFrom(value).buildPartial();
          } else {
            body_ = value;
          }
          onChanged();
        } else {
          if (bodyCase_ == 10) {
            simpleMapBuilder_.mergeFrom(value);
          }
          simpleMapBuilder_.setMessage(value);
        }
        bodyCase_ = 10;
        return this;
      }
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      public Builder clearSimpleMap() {
        if (simpleMapBuilder_ == null) {
          if (bodyCase_ == 10) {
            bodyCase_ = 0;
            body_ = null;
            onChanged();
          }
        } else {
          if (bodyCase_ == 10) {
            bodyCase_ = 0;
            body_ = null;
          }
          simpleMapBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.Builder getSimpleMapBuilder() {
        return getSimpleMapFieldBuilder().getBuilder();
      }
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSetOrBuilder getSimpleMapOrBuilder() {
        if ((bodyCase_ == 10) && (simpleMapBuilder_ != null)) {
          return simpleMapBuilder_.getMessageOrBuilder();
        } else {
          if (bodyCase_ == 10) {
            return (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_;
          }
          return com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance();
        }
      }
      /**
       * <code>.snomed.SimpleMapReferenceSet simple_map = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet, com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSetOrBuilder> 
          getSimpleMapFieldBuilder() {
        if (simpleMapBuilder_ == null) {
          if (!(bodyCase_ == 10)) {
            body_ = com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance();
          }
          simpleMapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet, com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.Builder, com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSetOrBuilder>(
                  (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) body_,
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        bodyCase_ = 10;
        onChanged();;
        return simpleMapBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.ReferenceSetItem)
    }

    // @@protoc_insertion_point(class_scope:snomed.ReferenceSetItem)
    private static final com.eldrix.terminology.snomedct.Protos.ReferenceSetItem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.ReferenceSetItem();
    }

    public static com.eldrix.terminology.snomedct.Protos.ReferenceSetItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReferenceSetItem>
        PARSER = new com.google.protobuf.AbstractParser<ReferenceSetItem>() {
      public ReferenceSetItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReferenceSetItem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReferenceSetItem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReferenceSetItem> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.ReferenceSetItem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RefSetDescriptorReferenceSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.RefSetDescriptorReferenceSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies the name of an attribute that is used in the reference set to which this descriptor applies.
     * </pre>
     *
     * <code>int64 attribute_description_id = 1;</code>
     */
    long getAttributeDescriptionId();

    /**
     * <pre>
     * Specifies the data type of this attribute in the reference set to which this descriptor applies.
     * </pre>
     *
     * <code>int64 attribute_type_id = 2;</code>
     */
    long getAttributeTypeId();

    /**
     * <pre>
     * An unsigned Integer, providing an ordering for the additional attributes extending the reference set .
     * </pre>
     *
     * <code>uint32 attribute_order = 3;</code>
     */
    int getAttributeOrder();
  }
  /**
   * <pre>
   * RefSetDescriptorReferenceSet is a type of reference set that provides information about a different reference set
   * See https://confluence.ihtsdotools.org/display/DOCRELFMT/4.2.11.+Reference+Set+Descriptor
   * It provides the additional structure for a given reference set.
   * </pre>
   *
   * Protobuf type {@code snomed.RefSetDescriptorReferenceSet}
   */
  public  static final class RefSetDescriptorReferenceSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.RefSetDescriptorReferenceSet)
      RefSetDescriptorReferenceSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RefSetDescriptorReferenceSet.newBuilder() to construct.
    private RefSetDescriptorReferenceSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RefSetDescriptorReferenceSet() {
      attributeDescriptionId_ = 0L;
      attributeTypeId_ = 0L;
      attributeOrder_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RefSetDescriptorReferenceSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              attributeDescriptionId_ = input.readInt64();
              break;
            }
            case 16: {

              attributeTypeId_ = input.readInt64();
              break;
            }
            case 24: {

              attributeOrder_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_RefSetDescriptorReferenceSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_RefSetDescriptorReferenceSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.class, com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.Builder.class);
    }

    public static final int ATTRIBUTE_DESCRIPTION_ID_FIELD_NUMBER = 1;
    private long attributeDescriptionId_;
    /**
     * <pre>
     * Specifies the name of an attribute that is used in the reference set to which this descriptor applies.
     * </pre>
     *
     * <code>int64 attribute_description_id = 1;</code>
     */
    public long getAttributeDescriptionId() {
      return attributeDescriptionId_;
    }

    public static final int ATTRIBUTE_TYPE_ID_FIELD_NUMBER = 2;
    private long attributeTypeId_;
    /**
     * <pre>
     * Specifies the data type of this attribute in the reference set to which this descriptor applies.
     * </pre>
     *
     * <code>int64 attribute_type_id = 2;</code>
     */
    public long getAttributeTypeId() {
      return attributeTypeId_;
    }

    public static final int ATTRIBUTE_ORDER_FIELD_NUMBER = 3;
    private int attributeOrder_;
    /**
     * <pre>
     * An unsigned Integer, providing an ordering for the additional attributes extending the reference set .
     * </pre>
     *
     * <code>uint32 attribute_order = 3;</code>
     */
    public int getAttributeOrder() {
      return attributeOrder_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (attributeDescriptionId_ != 0L) {
        output.writeInt64(1, attributeDescriptionId_);
      }
      if (attributeTypeId_ != 0L) {
        output.writeInt64(2, attributeTypeId_);
      }
      if (attributeOrder_ != 0) {
        output.writeUInt32(3, attributeOrder_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (attributeDescriptionId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, attributeDescriptionId_);
      }
      if (attributeTypeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, attributeTypeId_);
      }
      if (attributeOrder_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, attributeOrder_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet other = (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) obj;

      boolean result = true;
      result = result && (getAttributeDescriptionId()
          == other.getAttributeDescriptionId());
      result = result && (getAttributeTypeId()
          == other.getAttributeTypeId());
      result = result && (getAttributeOrder()
          == other.getAttributeOrder());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ATTRIBUTE_DESCRIPTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAttributeDescriptionId());
      hash = (37 * hash) + ATTRIBUTE_TYPE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAttributeTypeId());
      hash = (37 * hash) + ATTRIBUTE_ORDER_FIELD_NUMBER;
      hash = (53 * hash) + getAttributeOrder();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * RefSetDescriptorReferenceSet is a type of reference set that provides information about a different reference set
     * See https://confluence.ihtsdotools.org/display/DOCRELFMT/4.2.11.+Reference+Set+Descriptor
     * It provides the additional structure for a given reference set.
     * </pre>
     *
     * Protobuf type {@code snomed.RefSetDescriptorReferenceSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.RefSetDescriptorReferenceSet)
        com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_RefSetDescriptorReferenceSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_RefSetDescriptorReferenceSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.class, com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        attributeDescriptionId_ = 0L;

        attributeTypeId_ = 0L;

        attributeOrder_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_RefSetDescriptorReferenceSet_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet build() {
        com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet buildPartial() {
        com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet result = new com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet(this);
        result.attributeDescriptionId_ = attributeDescriptionId_;
        result.attributeTypeId_ = attributeTypeId_;
        result.attributeOrder_ = attributeOrder_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet other) {
        if (other == com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet.getDefaultInstance()) return this;
        if (other.getAttributeDescriptionId() != 0L) {
          setAttributeDescriptionId(other.getAttributeDescriptionId());
        }
        if (other.getAttributeTypeId() != 0L) {
          setAttributeTypeId(other.getAttributeTypeId());
        }
        if (other.getAttributeOrder() != 0) {
          setAttributeOrder(other.getAttributeOrder());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long attributeDescriptionId_ ;
      /**
       * <pre>
       * Specifies the name of an attribute that is used in the reference set to which this descriptor applies.
       * </pre>
       *
       * <code>int64 attribute_description_id = 1;</code>
       */
      public long getAttributeDescriptionId() {
        return attributeDescriptionId_;
      }
      /**
       * <pre>
       * Specifies the name of an attribute that is used in the reference set to which this descriptor applies.
       * </pre>
       *
       * <code>int64 attribute_description_id = 1;</code>
       */
      public Builder setAttributeDescriptionId(long value) {
        
        attributeDescriptionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the name of an attribute that is used in the reference set to which this descriptor applies.
       * </pre>
       *
       * <code>int64 attribute_description_id = 1;</code>
       */
      public Builder clearAttributeDescriptionId() {
        
        attributeDescriptionId_ = 0L;
        onChanged();
        return this;
      }

      private long attributeTypeId_ ;
      /**
       * <pre>
       * Specifies the data type of this attribute in the reference set to which this descriptor applies.
       * </pre>
       *
       * <code>int64 attribute_type_id = 2;</code>
       */
      public long getAttributeTypeId() {
        return attributeTypeId_;
      }
      /**
       * <pre>
       * Specifies the data type of this attribute in the reference set to which this descriptor applies.
       * </pre>
       *
       * <code>int64 attribute_type_id = 2;</code>
       */
      public Builder setAttributeTypeId(long value) {
        
        attributeTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the data type of this attribute in the reference set to which this descriptor applies.
       * </pre>
       *
       * <code>int64 attribute_type_id = 2;</code>
       */
      public Builder clearAttributeTypeId() {
        
        attributeTypeId_ = 0L;
        onChanged();
        return this;
      }

      private int attributeOrder_ ;
      /**
       * <pre>
       * An unsigned Integer, providing an ordering for the additional attributes extending the reference set .
       * </pre>
       *
       * <code>uint32 attribute_order = 3;</code>
       */
      public int getAttributeOrder() {
        return attributeOrder_;
      }
      /**
       * <pre>
       * An unsigned Integer, providing an ordering for the additional attributes extending the reference set .
       * </pre>
       *
       * <code>uint32 attribute_order = 3;</code>
       */
      public Builder setAttributeOrder(int value) {
        
        attributeOrder_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An unsigned Integer, providing an ordering for the additional attributes extending the reference set .
       * </pre>
       *
       * <code>uint32 attribute_order = 3;</code>
       */
      public Builder clearAttributeOrder() {
        
        attributeOrder_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.RefSetDescriptorReferenceSet)
    }

    // @@protoc_insertion_point(class_scope:snomed.RefSetDescriptorReferenceSet)
    private static final com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet();
    }

    public static com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RefSetDescriptorReferenceSet>
        PARSER = new com.google.protobuf.AbstractParser<RefSetDescriptorReferenceSet>() {
      public RefSetDescriptorReferenceSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RefSetDescriptorReferenceSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RefSetDescriptorReferenceSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RefSetDescriptorReferenceSet> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.RefSetDescriptorReferenceSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleReferenceSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.SimpleReferenceSet)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * SimpleReferenceSet is a simple reference set usable for defining subsets
   * See https://confluence.ihtsdotools.org/display/DOCRELFMT/4.2.1.+Simple+Reference+Set
   * </pre>
   *
   * Protobuf type {@code snomed.SimpleReferenceSet}
   */
  public  static final class SimpleReferenceSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.SimpleReferenceSet)
      SimpleReferenceSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleReferenceSet.newBuilder() to construct.
    private SimpleReferenceSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleReferenceSet() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleReferenceSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleReferenceSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleReferenceSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.class, com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet other = (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SimpleReferenceSet is a simple reference set usable for defining subsets
     * See https://confluence.ihtsdotools.org/display/DOCRELFMT/4.2.1.+Simple+Reference+Set
     * </pre>
     *
     * Protobuf type {@code snomed.SimpleReferenceSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.SimpleReferenceSet)
        com.eldrix.terminology.snomedct.Protos.SimpleReferenceSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleReferenceSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleReferenceSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.class, com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleReferenceSet_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet build() {
        com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet buildPartial() {
        com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet result = new com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet other) {
        if (other == com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.SimpleReferenceSet)
    }

    // @@protoc_insertion_point(class_scope:snomed.SimpleReferenceSet)
    private static final com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet();
    }

    public static com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleReferenceSet>
        PARSER = new com.google.protobuf.AbstractParser<SimpleReferenceSet>() {
      public SimpleReferenceSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleReferenceSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimpleReferenceSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleReferenceSet> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.SimpleReferenceSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LanguageReferenceSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.LanguageReferenceSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A subtype of 900000000000511003 |Acceptability| indicating whether the description is acceptable or preferred for use in the specified language or dialect .
     * </pre>
     *
     * <code>int64 acceptability_id = 1;</code>
     */
    long getAcceptabilityId();
  }
  /**
   * <pre>
   * LanguageReferenceSet is a A 900000000000506000 |Language type reference set| supporting the representation of
   * language and dialects preferences for the use of particular descriptions.
   * "The most common use case for this type of reference set is to specify the acceptable and preferred terms
   * for use within a particular country or region. However, the same type of reference set can also be used to
   * represent preferences for use of descriptions in a more specific context such as a clinical specialty,
   * organization or department.
   * No more than one description of a specific description type associated with a single concept may have the acceptabilityId value 900000000000548007 |Preferred|.
   * Every active concept should have one preferred synonym in each language.
   * This means that a language reference set should assign the acceptabilityId  900000000000548007 |Preferred|  to one  synonym (a  description with  typeId value 900000000000013009 |synonym|) associated with each concept .
   * This description is the preferred term for that concept in the specified language or dialect.
   * Any  description which is not referenced by an active row in the   reference set is regarded as unacceptable (i.e. not a valid  synonym in the language or  dialect ).
   * If a description becomes unacceptable, the relevant language reference set member is inactivated by adding a new row with the same id, the effectiveTime of the the change and the value active=0.
   * For this reason there is no requirement for an "unacceptable" value."
   * See https://confluence.ihtsdotools.org/display/DOCRELFMT/4.2.4.+Language+Reference+Set
   * </pre>
   *
   * Protobuf type {@code snomed.LanguageReferenceSet}
   */
  public  static final class LanguageReferenceSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.LanguageReferenceSet)
      LanguageReferenceSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LanguageReferenceSet.newBuilder() to construct.
    private LanguageReferenceSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LanguageReferenceSet() {
      acceptabilityId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LanguageReferenceSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              acceptabilityId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_LanguageReferenceSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_LanguageReferenceSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.class, com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.Builder.class);
    }

    public static final int ACCEPTABILITY_ID_FIELD_NUMBER = 1;
    private long acceptabilityId_;
    /**
     * <pre>
     * A subtype of 900000000000511003 |Acceptability| indicating whether the description is acceptable or preferred for use in the specified language or dialect .
     * </pre>
     *
     * <code>int64 acceptability_id = 1;</code>
     */
    public long getAcceptabilityId() {
      return acceptabilityId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (acceptabilityId_ != 0L) {
        output.writeInt64(1, acceptabilityId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (acceptabilityId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, acceptabilityId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet other = (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) obj;

      boolean result = true;
      result = result && (getAcceptabilityId()
          == other.getAcceptabilityId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACCEPTABILITY_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAcceptabilityId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * LanguageReferenceSet is a A 900000000000506000 |Language type reference set| supporting the representation of
     * language and dialects preferences for the use of particular descriptions.
     * "The most common use case for this type of reference set is to specify the acceptable and preferred terms
     * for use within a particular country or region. However, the same type of reference set can also be used to
     * represent preferences for use of descriptions in a more specific context such as a clinical specialty,
     * organization or department.
     * No more than one description of a specific description type associated with a single concept may have the acceptabilityId value 900000000000548007 |Preferred|.
     * Every active concept should have one preferred synonym in each language.
     * This means that a language reference set should assign the acceptabilityId  900000000000548007 |Preferred|  to one  synonym (a  description with  typeId value 900000000000013009 |synonym|) associated with each concept .
     * This description is the preferred term for that concept in the specified language or dialect.
     * Any  description which is not referenced by an active row in the   reference set is regarded as unacceptable (i.e. not a valid  synonym in the language or  dialect ).
     * If a description becomes unacceptable, the relevant language reference set member is inactivated by adding a new row with the same id, the effectiveTime of the the change and the value active=0.
     * For this reason there is no requirement for an "unacceptable" value."
     * See https://confluence.ihtsdotools.org/display/DOCRELFMT/4.2.4.+Language+Reference+Set
     * </pre>
     *
     * Protobuf type {@code snomed.LanguageReferenceSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.LanguageReferenceSet)
        com.eldrix.terminology.snomedct.Protos.LanguageReferenceSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_LanguageReferenceSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_LanguageReferenceSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.class, com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        acceptabilityId_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_LanguageReferenceSet_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet build() {
        com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet buildPartial() {
        com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet result = new com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet(this);
        result.acceptabilityId_ = acceptabilityId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet other) {
        if (other == com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet.getDefaultInstance()) return this;
        if (other.getAcceptabilityId() != 0L) {
          setAcceptabilityId(other.getAcceptabilityId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long acceptabilityId_ ;
      /**
       * <pre>
       * A subtype of 900000000000511003 |Acceptability| indicating whether the description is acceptable or preferred for use in the specified language or dialect .
       * </pre>
       *
       * <code>int64 acceptability_id = 1;</code>
       */
      public long getAcceptabilityId() {
        return acceptabilityId_;
      }
      /**
       * <pre>
       * A subtype of 900000000000511003 |Acceptability| indicating whether the description is acceptable or preferred for use in the specified language or dialect .
       * </pre>
       *
       * <code>int64 acceptability_id = 1;</code>
       */
      public Builder setAcceptabilityId(long value) {
        
        acceptabilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A subtype of 900000000000511003 |Acceptability| indicating whether the description is acceptable or preferred for use in the specified language or dialect .
       * </pre>
       *
       * <code>int64 acceptability_id = 1;</code>
       */
      public Builder clearAcceptabilityId() {
        
        acceptabilityId_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.LanguageReferenceSet)
    }

    // @@protoc_insertion_point(class_scope:snomed.LanguageReferenceSet)
    private static final com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet();
    }

    public static com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LanguageReferenceSet>
        PARSER = new com.google.protobuf.AbstractParser<LanguageReferenceSet>() {
      public LanguageReferenceSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LanguageReferenceSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LanguageReferenceSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LanguageReferenceSet> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.LanguageReferenceSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleMapReferenceSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.SimpleMapReferenceSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The equivalent code in the other terminology, classification or code system.
     * </pre>
     *
     * <code>string map_target = 1;</code>
     */
    java.lang.String getMapTarget();
    /**
     * <pre>
     * The equivalent code in the other terminology, classification or code system.
     * </pre>
     *
     * <code>string map_target = 1;</code>
     */
    com.google.protobuf.ByteString
        getMapTargetBytes();
  }
  /**
   * <pre>
   * SimpleMapReferenceSet is a straightforward one-to-one map between SNOMED-CT concepts and another
   * coding system. This is appropriate for simple maps.
   * See https://confluence.ihtsdotools.org/display/DOCRELFMT/4.2.9.+Simple+Map+Reference+Set
   * </pre>
   *
   * Protobuf type {@code snomed.SimpleMapReferenceSet}
   */
  public  static final class SimpleMapReferenceSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.SimpleMapReferenceSet)
      SimpleMapReferenceSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimpleMapReferenceSet.newBuilder() to construct.
    private SimpleMapReferenceSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimpleMapReferenceSet() {
      mapTarget_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleMapReferenceSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              mapTarget_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleMapReferenceSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleMapReferenceSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.class, com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.Builder.class);
    }

    public static final int MAP_TARGET_FIELD_NUMBER = 1;
    private volatile java.lang.Object mapTarget_;
    /**
     * <pre>
     * The equivalent code in the other terminology, classification or code system.
     * </pre>
     *
     * <code>string map_target = 1;</code>
     */
    public java.lang.String getMapTarget() {
      java.lang.Object ref = mapTarget_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mapTarget_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The equivalent code in the other terminology, classification or code system.
     * </pre>
     *
     * <code>string map_target = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMapTargetBytes() {
      java.lang.Object ref = mapTarget_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapTarget_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMapTargetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, mapTarget_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMapTargetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, mapTarget_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet other = (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) obj;

      boolean result = true;
      result = result && getMapTarget()
          .equals(other.getMapTarget());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAP_TARGET_FIELD_NUMBER;
      hash = (53 * hash) + getMapTarget().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SimpleMapReferenceSet is a straightforward one-to-one map between SNOMED-CT concepts and another
     * coding system. This is appropriate for simple maps.
     * See https://confluence.ihtsdotools.org/display/DOCRELFMT/4.2.9.+Simple+Map+Reference+Set
     * </pre>
     *
     * Protobuf type {@code snomed.SimpleMapReferenceSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.SimpleMapReferenceSet)
        com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleMapReferenceSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleMapReferenceSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.class, com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mapTarget_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_SimpleMapReferenceSet_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet build() {
        com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet buildPartial() {
        com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet result = new com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet(this);
        result.mapTarget_ = mapTarget_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet other) {
        if (other == com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet.getDefaultInstance()) return this;
        if (!other.getMapTarget().isEmpty()) {
          mapTarget_ = other.mapTarget_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object mapTarget_ = "";
      /**
       * <pre>
       * The equivalent code in the other terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 1;</code>
       */
      public java.lang.String getMapTarget() {
        java.lang.Object ref = mapTarget_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mapTarget_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The equivalent code in the other terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMapTargetBytes() {
        java.lang.Object ref = mapTarget_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapTarget_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The equivalent code in the other terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 1;</code>
       */
      public Builder setMapTarget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mapTarget_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The equivalent code in the other terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 1;</code>
       */
      public Builder clearMapTarget() {
        
        mapTarget_ = getDefaultInstance().getMapTarget();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The equivalent code in the other terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 1;</code>
       */
      public Builder setMapTargetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mapTarget_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.SimpleMapReferenceSet)
    }

    // @@protoc_insertion_point(class_scope:snomed.SimpleMapReferenceSet)
    private static final com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet();
    }

    public static com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleMapReferenceSet>
        PARSER = new com.google.protobuf.AbstractParser<SimpleMapReferenceSet>() {
      public SimpleMapReferenceSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleMapReferenceSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimpleMapReferenceSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleMapReferenceSet> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.SimpleMapReferenceSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComplexMapReferenceSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.ComplexMapReferenceSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An Integer, grouping a set of complex map records from which one may be selected as a target code.
     * </pre>
     *
     * <code>int64 map_group = 1;</code>
     */
    long getMapGroup();

    /**
     * <pre>
     * Within a mapGroup, the mapPriority specifies the order in which complex map records should be checked
     * </pre>
     *
     * <code>int64 map_priority = 2;</code>
     */
    long getMapPriority();

    /**
     * <pre>
     * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
     * </pre>
     *
     * <code>string map_rule = 3;</code>
     */
    java.lang.String getMapRule();
    /**
     * <pre>
     * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
     * </pre>
     *
     * <code>string map_rule = 3;</code>
     */
    com.google.protobuf.ByteString
        getMapRuleBytes();

    /**
     * <pre>
     * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
     * </pre>
     *
     * <code>string map_advice = 4;</code>
     */
    java.lang.String getMapAdvice();
    /**
     * <pre>
     * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
     * </pre>
     *
     * <code>string map_advice = 4;</code>
     */
    com.google.protobuf.ByteString
        getMapAdviceBytes();

    /**
     * <pre>
     * The target code in the target terminology, classification or code system.
     * </pre>
     *
     * <code>string map_target = 5;</code>
     */
    java.lang.String getMapTarget();
    /**
     * <pre>
     * The target code in the target terminology, classification or code system.
     * </pre>
     *
     * <code>string map_target = 5;</code>
     */
    com.google.protobuf.ByteString
        getMapTargetBytes();

    /**
     * <pre>
     * A child of 447247004 |SNOMED CT source code to target map code correlation value|in the metadata hierarchy, identifying the correlation between the SNOMED CT concept and the target code.
     * </pre>
     *
     * <code>int64 correction_id = 6;</code>
     */
    long getCorrectionId();

    /**
     * <pre>
     * Only for extended complex map refsets: Identifies the SNOMED CT concept in the metadata hierarchy which represents the MapCategory for the associated map member.
     * </pre>
     *
     * <code>int64 map_category_id = 7;</code>
     */
    long getMapCategoryId();
  }
  /**
   * <pre>
   * ComplexMapReferenceSet represents a complex one-to-many map between SNOMED-CT and another
   * coding system.
   * A 447250001 |Complex map type reference set|enables representation of maps where each SNOMED
   * CT concept may map to one or more codes in a target scheme.
   * The type of reference set supports the general set of mapping data required to enable a
   * target code to be selected at run-time from a number of alternate codes. It supports
   * target code selection by accommodating the inclusion of machine readable rules and/or human readable advice.
   * An 609331003 |Extended map type reference set|adds an additional field to allow categorization of maps.
   * </pre>
   *
   * Protobuf type {@code snomed.ComplexMapReferenceSet}
   */
  public  static final class ComplexMapReferenceSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.ComplexMapReferenceSet)
      ComplexMapReferenceSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ComplexMapReferenceSet.newBuilder() to construct.
    private ComplexMapReferenceSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ComplexMapReferenceSet() {
      mapGroup_ = 0L;
      mapPriority_ = 0L;
      mapRule_ = "";
      mapAdvice_ = "";
      mapTarget_ = "";
      correctionId_ = 0L;
      mapCategoryId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ComplexMapReferenceSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              mapGroup_ = input.readInt64();
              break;
            }
            case 16: {

              mapPriority_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              mapRule_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              mapAdvice_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              mapTarget_ = s;
              break;
            }
            case 48: {

              correctionId_ = input.readInt64();
              break;
            }
            case 56: {

              mapCategoryId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ComplexMapReferenceSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ComplexMapReferenceSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet.class, com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet.Builder.class);
    }

    public static final int MAP_GROUP_FIELD_NUMBER = 1;
    private long mapGroup_;
    /**
     * <pre>
     * An Integer, grouping a set of complex map records from which one may be selected as a target code.
     * </pre>
     *
     * <code>int64 map_group = 1;</code>
     */
    public long getMapGroup() {
      return mapGroup_;
    }

    public static final int MAP_PRIORITY_FIELD_NUMBER = 2;
    private long mapPriority_;
    /**
     * <pre>
     * Within a mapGroup, the mapPriority specifies the order in which complex map records should be checked
     * </pre>
     *
     * <code>int64 map_priority = 2;</code>
     */
    public long getMapPriority() {
      return mapPriority_;
    }

    public static final int MAP_RULE_FIELD_NUMBER = 3;
    private volatile java.lang.Object mapRule_;
    /**
     * <pre>
     * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
     * </pre>
     *
     * <code>string map_rule = 3;</code>
     */
    public java.lang.String getMapRule() {
      java.lang.Object ref = mapRule_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mapRule_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
     * </pre>
     *
     * <code>string map_rule = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMapRuleBytes() {
      java.lang.Object ref = mapRule_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapRule_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAP_ADVICE_FIELD_NUMBER = 4;
    private volatile java.lang.Object mapAdvice_;
    /**
     * <pre>
     * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
     * </pre>
     *
     * <code>string map_advice = 4;</code>
     */
    public java.lang.String getMapAdvice() {
      java.lang.Object ref = mapAdvice_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mapAdvice_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
     * </pre>
     *
     * <code>string map_advice = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMapAdviceBytes() {
      java.lang.Object ref = mapAdvice_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapAdvice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAP_TARGET_FIELD_NUMBER = 5;
    private volatile java.lang.Object mapTarget_;
    /**
     * <pre>
     * The target code in the target terminology, classification or code system.
     * </pre>
     *
     * <code>string map_target = 5;</code>
     */
    public java.lang.String getMapTarget() {
      java.lang.Object ref = mapTarget_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mapTarget_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The target code in the target terminology, classification or code system.
     * </pre>
     *
     * <code>string map_target = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMapTargetBytes() {
      java.lang.Object ref = mapTarget_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapTarget_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CORRECTION_ID_FIELD_NUMBER = 6;
    private long correctionId_;
    /**
     * <pre>
     * A child of 447247004 |SNOMED CT source code to target map code correlation value|in the metadata hierarchy, identifying the correlation between the SNOMED CT concept and the target code.
     * </pre>
     *
     * <code>int64 correction_id = 6;</code>
     */
    public long getCorrectionId() {
      return correctionId_;
    }

    public static final int MAP_CATEGORY_ID_FIELD_NUMBER = 7;
    private long mapCategoryId_;
    /**
     * <pre>
     * Only for extended complex map refsets: Identifies the SNOMED CT concept in the metadata hierarchy which represents the MapCategory for the associated map member.
     * </pre>
     *
     * <code>int64 map_category_id = 7;</code>
     */
    public long getMapCategoryId() {
      return mapCategoryId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mapGroup_ != 0L) {
        output.writeInt64(1, mapGroup_);
      }
      if (mapPriority_ != 0L) {
        output.writeInt64(2, mapPriority_);
      }
      if (!getMapRuleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, mapRule_);
      }
      if (!getMapAdviceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, mapAdvice_);
      }
      if (!getMapTargetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, mapTarget_);
      }
      if (correctionId_ != 0L) {
        output.writeInt64(6, correctionId_);
      }
      if (mapCategoryId_ != 0L) {
        output.writeInt64(7, mapCategoryId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mapGroup_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, mapGroup_);
      }
      if (mapPriority_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, mapPriority_);
      }
      if (!getMapRuleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, mapRule_);
      }
      if (!getMapAdviceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, mapAdvice_);
      }
      if (!getMapTargetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, mapTarget_);
      }
      if (correctionId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, correctionId_);
      }
      if (mapCategoryId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, mapCategoryId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet other = (com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet) obj;

      boolean result = true;
      result = result && (getMapGroup()
          == other.getMapGroup());
      result = result && (getMapPriority()
          == other.getMapPriority());
      result = result && getMapRule()
          .equals(other.getMapRule());
      result = result && getMapAdvice()
          .equals(other.getMapAdvice());
      result = result && getMapTarget()
          .equals(other.getMapTarget());
      result = result && (getCorrectionId()
          == other.getCorrectionId());
      result = result && (getMapCategoryId()
          == other.getMapCategoryId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAP_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMapGroup());
      hash = (37 * hash) + MAP_PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMapPriority());
      hash = (37 * hash) + MAP_RULE_FIELD_NUMBER;
      hash = (53 * hash) + getMapRule().hashCode();
      hash = (37 * hash) + MAP_ADVICE_FIELD_NUMBER;
      hash = (53 * hash) + getMapAdvice().hashCode();
      hash = (37 * hash) + MAP_TARGET_FIELD_NUMBER;
      hash = (53 * hash) + getMapTarget().hashCode();
      hash = (37 * hash) + CORRECTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCorrectionId());
      hash = (37 * hash) + MAP_CATEGORY_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMapCategoryId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ComplexMapReferenceSet represents a complex one-to-many map between SNOMED-CT and another
     * coding system.
     * A 447250001 |Complex map type reference set|enables representation of maps where each SNOMED
     * CT concept may map to one or more codes in a target scheme.
     * The type of reference set supports the general set of mapping data required to enable a
     * target code to be selected at run-time from a number of alternate codes. It supports
     * target code selection by accommodating the inclusion of machine readable rules and/or human readable advice.
     * An 609331003 |Extended map type reference set|adds an additional field to allow categorization of maps.
     * </pre>
     *
     * Protobuf type {@code snomed.ComplexMapReferenceSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.ComplexMapReferenceSet)
        com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ComplexMapReferenceSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ComplexMapReferenceSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet.class, com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mapGroup_ = 0L;

        mapPriority_ = 0L;

        mapRule_ = "";

        mapAdvice_ = "";

        mapTarget_ = "";

        correctionId_ = 0L;

        mapCategoryId_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ComplexMapReferenceSet_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet build() {
        com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet buildPartial() {
        com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet result = new com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet(this);
        result.mapGroup_ = mapGroup_;
        result.mapPriority_ = mapPriority_;
        result.mapRule_ = mapRule_;
        result.mapAdvice_ = mapAdvice_;
        result.mapTarget_ = mapTarget_;
        result.correctionId_ = correctionId_;
        result.mapCategoryId_ = mapCategoryId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet other) {
        if (other == com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet.getDefaultInstance()) return this;
        if (other.getMapGroup() != 0L) {
          setMapGroup(other.getMapGroup());
        }
        if (other.getMapPriority() != 0L) {
          setMapPriority(other.getMapPriority());
        }
        if (!other.getMapRule().isEmpty()) {
          mapRule_ = other.mapRule_;
          onChanged();
        }
        if (!other.getMapAdvice().isEmpty()) {
          mapAdvice_ = other.mapAdvice_;
          onChanged();
        }
        if (!other.getMapTarget().isEmpty()) {
          mapTarget_ = other.mapTarget_;
          onChanged();
        }
        if (other.getCorrectionId() != 0L) {
          setCorrectionId(other.getCorrectionId());
        }
        if (other.getMapCategoryId() != 0L) {
          setMapCategoryId(other.getMapCategoryId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long mapGroup_ ;
      /**
       * <pre>
       * An Integer, grouping a set of complex map records from which one may be selected as a target code.
       * </pre>
       *
       * <code>int64 map_group = 1;</code>
       */
      public long getMapGroup() {
        return mapGroup_;
      }
      /**
       * <pre>
       * An Integer, grouping a set of complex map records from which one may be selected as a target code.
       * </pre>
       *
       * <code>int64 map_group = 1;</code>
       */
      public Builder setMapGroup(long value) {
        
        mapGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An Integer, grouping a set of complex map records from which one may be selected as a target code.
       * </pre>
       *
       * <code>int64 map_group = 1;</code>
       */
      public Builder clearMapGroup() {
        
        mapGroup_ = 0L;
        onChanged();
        return this;
      }

      private long mapPriority_ ;
      /**
       * <pre>
       * Within a mapGroup, the mapPriority specifies the order in which complex map records should be checked
       * </pre>
       *
       * <code>int64 map_priority = 2;</code>
       */
      public long getMapPriority() {
        return mapPriority_;
      }
      /**
       * <pre>
       * Within a mapGroup, the mapPriority specifies the order in which complex map records should be checked
       * </pre>
       *
       * <code>int64 map_priority = 2;</code>
       */
      public Builder setMapPriority(long value) {
        
        mapPriority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Within a mapGroup, the mapPriority specifies the order in which complex map records should be checked
       * </pre>
       *
       * <code>int64 map_priority = 2;</code>
       */
      public Builder clearMapPriority() {
        
        mapPriority_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object mapRule_ = "";
      /**
       * <pre>
       * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
       * </pre>
       *
       * <code>string map_rule = 3;</code>
       */
      public java.lang.String getMapRule() {
        java.lang.Object ref = mapRule_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mapRule_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
       * </pre>
       *
       * <code>string map_rule = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMapRuleBytes() {
        java.lang.Object ref = mapRule_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapRule_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
       * </pre>
       *
       * <code>string map_rule = 3;</code>
       */
      public Builder setMapRule(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mapRule_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
       * </pre>
       *
       * <code>string map_rule = 3;</code>
       */
      public Builder clearMapRule() {
        
        mapRule_ = getDefaultInstance().getMapRule();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A machine-readable rule, (evaluating to either 'true' or 'false' at run-time) that indicates whether this map record should be selected within its mapGroup.
       * </pre>
       *
       * <code>string map_rule = 3;</code>
       */
      public Builder setMapRuleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mapRule_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mapAdvice_ = "";
      /**
       * <pre>
       * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
       * </pre>
       *
       * <code>string map_advice = 4;</code>
       */
      public java.lang.String getMapAdvice() {
        java.lang.Object ref = mapAdvice_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mapAdvice_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
       * </pre>
       *
       * <code>string map_advice = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMapAdviceBytes() {
        java.lang.Object ref = mapAdvice_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapAdvice_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
       * </pre>
       *
       * <code>string map_advice = 4;</code>
       */
      public Builder setMapAdvice(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mapAdvice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
       * </pre>
       *
       * <code>string map_advice = 4;</code>
       */
      public Builder clearMapAdvice() {
        
        mapAdvice_ = getDefaultInstance().getMapAdvice();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Human-readable advice, that may be employed by the software vendor to give an end-user advice on selection of the appropriate target code from the alternatives presented to him within the group.
       * </pre>
       *
       * <code>string map_advice = 4;</code>
       */
      public Builder setMapAdviceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mapAdvice_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mapTarget_ = "";
      /**
       * <pre>
       * The target code in the target terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 5;</code>
       */
      public java.lang.String getMapTarget() {
        java.lang.Object ref = mapTarget_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mapTarget_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The target code in the target terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMapTargetBytes() {
        java.lang.Object ref = mapTarget_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapTarget_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The target code in the target terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 5;</code>
       */
      public Builder setMapTarget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mapTarget_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The target code in the target terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 5;</code>
       */
      public Builder clearMapTarget() {
        
        mapTarget_ = getDefaultInstance().getMapTarget();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The target code in the target terminology, classification or code system.
       * </pre>
       *
       * <code>string map_target = 5;</code>
       */
      public Builder setMapTargetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mapTarget_ = value;
        onChanged();
        return this;
      }

      private long correctionId_ ;
      /**
       * <pre>
       * A child of 447247004 |SNOMED CT source code to target map code correlation value|in the metadata hierarchy, identifying the correlation between the SNOMED CT concept and the target code.
       * </pre>
       *
       * <code>int64 correction_id = 6;</code>
       */
      public long getCorrectionId() {
        return correctionId_;
      }
      /**
       * <pre>
       * A child of 447247004 |SNOMED CT source code to target map code correlation value|in the metadata hierarchy, identifying the correlation between the SNOMED CT concept and the target code.
       * </pre>
       *
       * <code>int64 correction_id = 6;</code>
       */
      public Builder setCorrectionId(long value) {
        
        correctionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A child of 447247004 |SNOMED CT source code to target map code correlation value|in the metadata hierarchy, identifying the correlation between the SNOMED CT concept and the target code.
       * </pre>
       *
       * <code>int64 correction_id = 6;</code>
       */
      public Builder clearCorrectionId() {
        
        correctionId_ = 0L;
        onChanged();
        return this;
      }

      private long mapCategoryId_ ;
      /**
       * <pre>
       * Only for extended complex map refsets: Identifies the SNOMED CT concept in the metadata hierarchy which represents the MapCategory for the associated map member.
       * </pre>
       *
       * <code>int64 map_category_id = 7;</code>
       */
      public long getMapCategoryId() {
        return mapCategoryId_;
      }
      /**
       * <pre>
       * Only for extended complex map refsets: Identifies the SNOMED CT concept in the metadata hierarchy which represents the MapCategory for the associated map member.
       * </pre>
       *
       * <code>int64 map_category_id = 7;</code>
       */
      public Builder setMapCategoryId(long value) {
        
        mapCategoryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only for extended complex map refsets: Identifies the SNOMED CT concept in the metadata hierarchy which represents the MapCategory for the associated map member.
       * </pre>
       *
       * <code>int64 map_category_id = 7;</code>
       */
      public Builder clearMapCategoryId() {
        
        mapCategoryId_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.ComplexMapReferenceSet)
    }

    // @@protoc_insertion_point(class_scope:snomed.ComplexMapReferenceSet)
    private static final com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet();
    }

    public static com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComplexMapReferenceSet>
        PARSER = new com.google.protobuf.AbstractParser<ComplexMapReferenceSet>() {
      public ComplexMapReferenceSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ComplexMapReferenceSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ComplexMapReferenceSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComplexMapReferenceSet> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.ComplexMapReferenceSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExtendedDescriptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snomed.ExtendedDescription)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.snomed.Description description = 1;</code>
     */
    boolean hasDescription();
    /**
     * <code>.snomed.Description description = 1;</code>
     */
    com.eldrix.terminology.snomedct.Protos.Description getDescription();
    /**
     * <code>.snomed.Description description = 1;</code>
     */
    com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder getDescriptionOrBuilder();

    /**
     * <pre>
     * concept to which this description relates
     * </pre>
     *
     * <code>.snomed.Concept concept = 3;</code>
     */
    boolean hasConcept();
    /**
     * <pre>
     * concept to which this description relates
     * </pre>
     *
     * <code>.snomed.Concept concept = 3;</code>
     */
    com.eldrix.terminology.snomedct.Protos.Concept getConcept();
    /**
     * <pre>
     * concept to which this description relates
     * </pre>
     *
     * <code>.snomed.Concept concept = 3;</code>
     */
    com.eldrix.terminology.snomedct.Protos.ConceptOrBuilder getConceptOrBuilder();

    /**
     * <pre>
     * concept's preferred description
     * </pre>
     *
     * <code>.snomed.Description preferred_description = 4;</code>
     */
    boolean hasPreferredDescription();
    /**
     * <pre>
     * concept's preferred description
     * </pre>
     *
     * <code>.snomed.Description preferred_description = 4;</code>
     */
    com.eldrix.terminology.snomedct.Protos.Description getPreferredDescription();
    /**
     * <pre>
     * concept's preferred description
     * </pre>
     *
     * <code>.snomed.Description preferred_description = 4;</code>
     */
    com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder getPreferredDescriptionOrBuilder();

    /**
     * <pre>
     * list of all (recursive) IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 recursive_parent_ids = 5;</code>
     */
    java.util.List<java.lang.Long> getRecursiveParentIdsList();
    /**
     * <pre>
     * list of all (recursive) IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 recursive_parent_ids = 5;</code>
     */
    int getRecursiveParentIdsCount();
    /**
     * <pre>
     * list of all (recursive) IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 recursive_parent_ids = 5;</code>
     */
    long getRecursiveParentIds(int index);

    /**
     * <pre>
     * list of direct IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 direct_parent_ids = 6;</code>
     */
    java.util.List<java.lang.Long> getDirectParentIdsList();
    /**
     * <pre>
     * list of direct IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 direct_parent_ids = 6;</code>
     */
    int getDirectParentIdsCount();
    /**
     * <pre>
     * list of direct IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 direct_parent_ids = 6;</code>
     */
    long getDirectParentIds(int index);

    /**
     * <pre>
     * refsets to which the concept belong
     * </pre>
     *
     * <code>repeated int64 concept_refsets = 7;</code>
     */
    java.util.List<java.lang.Long> getConceptRefsetsList();
    /**
     * <pre>
     * refsets to which the concept belong
     * </pre>
     *
     * <code>repeated int64 concept_refsets = 7;</code>
     */
    int getConceptRefsetsCount();
    /**
     * <pre>
     * refsets to which the concept belong
     * </pre>
     *
     * <code>repeated int64 concept_refsets = 7;</code>
     */
    long getConceptRefsets(int index);

    /**
     * <pre>
     * refsets to which the description belong
     * </pre>
     *
     * <code>repeated int64 description_refsets = 8;</code>
     */
    java.util.List<java.lang.Long> getDescriptionRefsetsList();
    /**
     * <pre>
     * refsets to which the description belong
     * </pre>
     *
     * <code>repeated int64 description_refsets = 8;</code>
     */
    int getDescriptionRefsetsCount();
    /**
     * <pre>
     * refsets to which the description belong
     * </pre>
     *
     * <code>repeated int64 description_refsets = 8;</code>
     */
    long getDescriptionRefsets(int index);
  }
  /**
   * <pre>
   * ExtendedDescription represents a description together with 
   * sufficient additional contextual information relating to the 
   * description, including reference set membership as well as
   * the underlying concept, the concept's relationships and
   * the concept's membership of reference sets.
   * It is, in essence, a denormalised relationship, useful for 
   * wire-exchange purposes.
   * TODO: add language field
   * </pre>
   *
   * Protobuf type {@code snomed.ExtendedDescription}
   */
  public  static final class ExtendedDescription extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snomed.ExtendedDescription)
      ExtendedDescriptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExtendedDescription.newBuilder() to construct.
    private ExtendedDescription(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExtendedDescription() {
      recursiveParentIds_ = java.util.Collections.emptyList();
      directParentIds_ = java.util.Collections.emptyList();
      conceptRefsets_ = java.util.Collections.emptyList();
      descriptionRefsets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ExtendedDescription(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.eldrix.terminology.snomedct.Protos.Description.Builder subBuilder = null;
              if (description_ != null) {
                subBuilder = description_.toBuilder();
              }
              description_ = input.readMessage(com.eldrix.terminology.snomedct.Protos.Description.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(description_);
                description_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.eldrix.terminology.snomedct.Protos.Concept.Builder subBuilder = null;
              if (concept_ != null) {
                subBuilder = concept_.toBuilder();
              }
              concept_ = input.readMessage(com.eldrix.terminology.snomedct.Protos.Concept.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(concept_);
                concept_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.eldrix.terminology.snomedct.Protos.Description.Builder subBuilder = null;
              if (preferredDescription_ != null) {
                subBuilder = preferredDescription_.toBuilder();
              }
              preferredDescription_ = input.readMessage(com.eldrix.terminology.snomedct.Protos.Description.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(preferredDescription_);
                preferredDescription_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                recursiveParentIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              recursiveParentIds_.add(input.readInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                recursiveParentIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                recursiveParentIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                directParentIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              directParentIds_.add(input.readInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                directParentIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                directParentIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                conceptRefsets_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              conceptRefsets_.add(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                conceptRefsets_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                conceptRefsets_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                descriptionRefsets_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              descriptionRefsets_.add(input.readInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                descriptionRefsets_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                descriptionRefsets_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          recursiveParentIds_ = java.util.Collections.unmodifiableList(recursiveParentIds_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          directParentIds_ = java.util.Collections.unmodifiableList(directParentIds_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          conceptRefsets_ = java.util.Collections.unmodifiableList(conceptRefsets_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          descriptionRefsets_ = java.util.Collections.unmodifiableList(descriptionRefsets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ExtendedDescription_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ExtendedDescription_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eldrix.terminology.snomedct.Protos.ExtendedDescription.class, com.eldrix.terminology.snomedct.Protos.ExtendedDescription.Builder.class);
    }

    private int bitField0_;
    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    private com.eldrix.terminology.snomedct.Protos.Description description_;
    /**
     * <code>.snomed.Description description = 1;</code>
     */
    public boolean hasDescription() {
      return description_ != null;
    }
    /**
     * <code>.snomed.Description description = 1;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.Description getDescription() {
      return description_ == null ? com.eldrix.terminology.snomedct.Protos.Description.getDefaultInstance() : description_;
    }
    /**
     * <code>.snomed.Description description = 1;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder getDescriptionOrBuilder() {
      return getDescription();
    }

    public static final int CONCEPT_FIELD_NUMBER = 3;
    private com.eldrix.terminology.snomedct.Protos.Concept concept_;
    /**
     * <pre>
     * concept to which this description relates
     * </pre>
     *
     * <code>.snomed.Concept concept = 3;</code>
     */
    public boolean hasConcept() {
      return concept_ != null;
    }
    /**
     * <pre>
     * concept to which this description relates
     * </pre>
     *
     * <code>.snomed.Concept concept = 3;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.Concept getConcept() {
      return concept_ == null ? com.eldrix.terminology.snomedct.Protos.Concept.getDefaultInstance() : concept_;
    }
    /**
     * <pre>
     * concept to which this description relates
     * </pre>
     *
     * <code>.snomed.Concept concept = 3;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.ConceptOrBuilder getConceptOrBuilder() {
      return getConcept();
    }

    public static final int PREFERRED_DESCRIPTION_FIELD_NUMBER = 4;
    private com.eldrix.terminology.snomedct.Protos.Description preferredDescription_;
    /**
     * <pre>
     * concept's preferred description
     * </pre>
     *
     * <code>.snomed.Description preferred_description = 4;</code>
     */
    public boolean hasPreferredDescription() {
      return preferredDescription_ != null;
    }
    /**
     * <pre>
     * concept's preferred description
     * </pre>
     *
     * <code>.snomed.Description preferred_description = 4;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.Description getPreferredDescription() {
      return preferredDescription_ == null ? com.eldrix.terminology.snomedct.Protos.Description.getDefaultInstance() : preferredDescription_;
    }
    /**
     * <pre>
     * concept's preferred description
     * </pre>
     *
     * <code>.snomed.Description preferred_description = 4;</code>
     */
    public com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder getPreferredDescriptionOrBuilder() {
      return getPreferredDescription();
    }

    public static final int RECURSIVE_PARENT_IDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> recursiveParentIds_;
    /**
     * <pre>
     * list of all (recursive) IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 recursive_parent_ids = 5;</code>
     */
    public java.util.List<java.lang.Long>
        getRecursiveParentIdsList() {
      return recursiveParentIds_;
    }
    /**
     * <pre>
     * list of all (recursive) IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 recursive_parent_ids = 5;</code>
     */
    public int getRecursiveParentIdsCount() {
      return recursiveParentIds_.size();
    }
    /**
     * <pre>
     * list of all (recursive) IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 recursive_parent_ids = 5;</code>
     */
    public long getRecursiveParentIds(int index) {
      return recursiveParentIds_.get(index);
    }
    private int recursiveParentIdsMemoizedSerializedSize = -1;

    public static final int DIRECT_PARENT_IDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> directParentIds_;
    /**
     * <pre>
     * list of direct IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 direct_parent_ids = 6;</code>
     */
    public java.util.List<java.lang.Long>
        getDirectParentIdsList() {
      return directParentIds_;
    }
    /**
     * <pre>
     * list of direct IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 direct_parent_ids = 6;</code>
     */
    public int getDirectParentIdsCount() {
      return directParentIds_.size();
    }
    /**
     * <pre>
     * list of direct IS-A parents for concept
     * </pre>
     *
     * <code>repeated int64 direct_parent_ids = 6;</code>
     */
    public long getDirectParentIds(int index) {
      return directParentIds_.get(index);
    }
    private int directParentIdsMemoizedSerializedSize = -1;

    public static final int CONCEPT_REFSETS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> conceptRefsets_;
    /**
     * <pre>
     * refsets to which the concept belong
     * </pre>
     *
     * <code>repeated int64 concept_refsets = 7;</code>
     */
    public java.util.List<java.lang.Long>
        getConceptRefsetsList() {
      return conceptRefsets_;
    }
    /**
     * <pre>
     * refsets to which the concept belong
     * </pre>
     *
     * <code>repeated int64 concept_refsets = 7;</code>
     */
    public int getConceptRefsetsCount() {
      return conceptRefsets_.size();
    }
    /**
     * <pre>
     * refsets to which the concept belong
     * </pre>
     *
     * <code>repeated int64 concept_refsets = 7;</code>
     */
    public long getConceptRefsets(int index) {
      return conceptRefsets_.get(index);
    }
    private int conceptRefsetsMemoizedSerializedSize = -1;

    public static final int DESCRIPTION_REFSETS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> descriptionRefsets_;
    /**
     * <pre>
     * refsets to which the description belong
     * </pre>
     *
     * <code>repeated int64 description_refsets = 8;</code>
     */
    public java.util.List<java.lang.Long>
        getDescriptionRefsetsList() {
      return descriptionRefsets_;
    }
    /**
     * <pre>
     * refsets to which the description belong
     * </pre>
     *
     * <code>repeated int64 description_refsets = 8;</code>
     */
    public int getDescriptionRefsetsCount() {
      return descriptionRefsets_.size();
    }
    /**
     * <pre>
     * refsets to which the description belong
     * </pre>
     *
     * <code>repeated int64 description_refsets = 8;</code>
     */
    public long getDescriptionRefsets(int index) {
      return descriptionRefsets_.get(index);
    }
    private int descriptionRefsetsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (description_ != null) {
        output.writeMessage(1, getDescription());
      }
      if (concept_ != null) {
        output.writeMessage(3, getConcept());
      }
      if (preferredDescription_ != null) {
        output.writeMessage(4, getPreferredDescription());
      }
      if (getRecursiveParentIdsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(recursiveParentIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < recursiveParentIds_.size(); i++) {
        output.writeInt64NoTag(recursiveParentIds_.get(i));
      }
      if (getDirectParentIdsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(directParentIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < directParentIds_.size(); i++) {
        output.writeInt64NoTag(directParentIds_.get(i));
      }
      if (getConceptRefsetsList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(conceptRefsetsMemoizedSerializedSize);
      }
      for (int i = 0; i < conceptRefsets_.size(); i++) {
        output.writeInt64NoTag(conceptRefsets_.get(i));
      }
      if (getDescriptionRefsetsList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(descriptionRefsetsMemoizedSerializedSize);
      }
      for (int i = 0; i < descriptionRefsets_.size(); i++) {
        output.writeInt64NoTag(descriptionRefsets_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (description_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDescription());
      }
      if (concept_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getConcept());
      }
      if (preferredDescription_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPreferredDescription());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < recursiveParentIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(recursiveParentIds_.get(i));
        }
        size += dataSize;
        if (!getRecursiveParentIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        recursiveParentIdsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < directParentIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(directParentIds_.get(i));
        }
        size += dataSize;
        if (!getDirectParentIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        directParentIdsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < conceptRefsets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(conceptRefsets_.get(i));
        }
        size += dataSize;
        if (!getConceptRefsetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        conceptRefsetsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < descriptionRefsets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(descriptionRefsets_.get(i));
        }
        size += dataSize;
        if (!getDescriptionRefsetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        descriptionRefsetsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.eldrix.terminology.snomedct.Protos.ExtendedDescription)) {
        return super.equals(obj);
      }
      com.eldrix.terminology.snomedct.Protos.ExtendedDescription other = (com.eldrix.terminology.snomedct.Protos.ExtendedDescription) obj;

      boolean result = true;
      result = result && (hasDescription() == other.hasDescription());
      if (hasDescription()) {
        result = result && getDescription()
            .equals(other.getDescription());
      }
      result = result && (hasConcept() == other.hasConcept());
      if (hasConcept()) {
        result = result && getConcept()
            .equals(other.getConcept());
      }
      result = result && (hasPreferredDescription() == other.hasPreferredDescription());
      if (hasPreferredDescription()) {
        result = result && getPreferredDescription()
            .equals(other.getPreferredDescription());
      }
      result = result && getRecursiveParentIdsList()
          .equals(other.getRecursiveParentIdsList());
      result = result && getDirectParentIdsList()
          .equals(other.getDirectParentIdsList());
      result = result && getConceptRefsetsList()
          .equals(other.getConceptRefsetsList());
      result = result && getDescriptionRefsetsList()
          .equals(other.getDescriptionRefsetsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (hasConcept()) {
        hash = (37 * hash) + CONCEPT_FIELD_NUMBER;
        hash = (53 * hash) + getConcept().hashCode();
      }
      if (hasPreferredDescription()) {
        hash = (37 * hash) + PREFERRED_DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getPreferredDescription().hashCode();
      }
      if (getRecursiveParentIdsCount() > 0) {
        hash = (37 * hash) + RECURSIVE_PARENT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getRecursiveParentIdsList().hashCode();
      }
      if (getDirectParentIdsCount() > 0) {
        hash = (37 * hash) + DIRECT_PARENT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getDirectParentIdsList().hashCode();
      }
      if (getConceptRefsetsCount() > 0) {
        hash = (37 * hash) + CONCEPT_REFSETS_FIELD_NUMBER;
        hash = (53 * hash) + getConceptRefsetsList().hashCode();
      }
      if (getDescriptionRefsetsCount() > 0) {
        hash = (37 * hash) + DESCRIPTION_REFSETS_FIELD_NUMBER;
        hash = (53 * hash) + getDescriptionRefsetsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.eldrix.terminology.snomedct.Protos.ExtendedDescription prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ExtendedDescription represents a description together with 
     * sufficient additional contextual information relating to the 
     * description, including reference set membership as well as
     * the underlying concept, the concept's relationships and
     * the concept's membership of reference sets.
     * It is, in essence, a denormalised relationship, useful for 
     * wire-exchange purposes.
     * TODO: add language field
     * </pre>
     *
     * Protobuf type {@code snomed.ExtendedDescription}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snomed.ExtendedDescription)
        com.eldrix.terminology.snomedct.Protos.ExtendedDescriptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ExtendedDescription_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ExtendedDescription_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.eldrix.terminology.snomedct.Protos.ExtendedDescription.class, com.eldrix.terminology.snomedct.Protos.ExtendedDescription.Builder.class);
      }

      // Construct using com.eldrix.terminology.snomedct.Protos.ExtendedDescription.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (descriptionBuilder_ == null) {
          description_ = null;
        } else {
          description_ = null;
          descriptionBuilder_ = null;
        }
        if (conceptBuilder_ == null) {
          concept_ = null;
        } else {
          concept_ = null;
          conceptBuilder_ = null;
        }
        if (preferredDescriptionBuilder_ == null) {
          preferredDescription_ = null;
        } else {
          preferredDescription_ = null;
          preferredDescriptionBuilder_ = null;
        }
        recursiveParentIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        directParentIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        conceptRefsets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        descriptionRefsets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.eldrix.terminology.snomedct.Protos.internal_static_snomed_ExtendedDescription_descriptor;
      }

      public com.eldrix.terminology.snomedct.Protos.ExtendedDescription getDefaultInstanceForType() {
        return com.eldrix.terminology.snomedct.Protos.ExtendedDescription.getDefaultInstance();
      }

      public com.eldrix.terminology.snomedct.Protos.ExtendedDescription build() {
        com.eldrix.terminology.snomedct.Protos.ExtendedDescription result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.eldrix.terminology.snomedct.Protos.ExtendedDescription buildPartial() {
        com.eldrix.terminology.snomedct.Protos.ExtendedDescription result = new com.eldrix.terminology.snomedct.Protos.ExtendedDescription(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (descriptionBuilder_ == null) {
          result.description_ = description_;
        } else {
          result.description_ = descriptionBuilder_.build();
        }
        if (conceptBuilder_ == null) {
          result.concept_ = concept_;
        } else {
          result.concept_ = conceptBuilder_.build();
        }
        if (preferredDescriptionBuilder_ == null) {
          result.preferredDescription_ = preferredDescription_;
        } else {
          result.preferredDescription_ = preferredDescriptionBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          recursiveParentIds_ = java.util.Collections.unmodifiableList(recursiveParentIds_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.recursiveParentIds_ = recursiveParentIds_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          directParentIds_ = java.util.Collections.unmodifiableList(directParentIds_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.directParentIds_ = directParentIds_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          conceptRefsets_ = java.util.Collections.unmodifiableList(conceptRefsets_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.conceptRefsets_ = conceptRefsets_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          descriptionRefsets_ = java.util.Collections.unmodifiableList(descriptionRefsets_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.descriptionRefsets_ = descriptionRefsets_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.eldrix.terminology.snomedct.Protos.ExtendedDescription) {
          return mergeFrom((com.eldrix.terminology.snomedct.Protos.ExtendedDescription)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.eldrix.terminology.snomedct.Protos.ExtendedDescription other) {
        if (other == com.eldrix.terminology.snomedct.Protos.ExtendedDescription.getDefaultInstance()) return this;
        if (other.hasDescription()) {
          mergeDescription(other.getDescription());
        }
        if (other.hasConcept()) {
          mergeConcept(other.getConcept());
        }
        if (other.hasPreferredDescription()) {
          mergePreferredDescription(other.getPreferredDescription());
        }
        if (!other.recursiveParentIds_.isEmpty()) {
          if (recursiveParentIds_.isEmpty()) {
            recursiveParentIds_ = other.recursiveParentIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRecursiveParentIdsIsMutable();
            recursiveParentIds_.addAll(other.recursiveParentIds_);
          }
          onChanged();
        }
        if (!other.directParentIds_.isEmpty()) {
          if (directParentIds_.isEmpty()) {
            directParentIds_ = other.directParentIds_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDirectParentIdsIsMutable();
            directParentIds_.addAll(other.directParentIds_);
          }
          onChanged();
        }
        if (!other.conceptRefsets_.isEmpty()) {
          if (conceptRefsets_.isEmpty()) {
            conceptRefsets_ = other.conceptRefsets_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureConceptRefsetsIsMutable();
            conceptRefsets_.addAll(other.conceptRefsets_);
          }
          onChanged();
        }
        if (!other.descriptionRefsets_.isEmpty()) {
          if (descriptionRefsets_.isEmpty()) {
            descriptionRefsets_ = other.descriptionRefsets_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureDescriptionRefsetsIsMutable();
            descriptionRefsets_.addAll(other.descriptionRefsets_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.eldrix.terminology.snomedct.Protos.ExtendedDescription parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.eldrix.terminology.snomedct.Protos.ExtendedDescription) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.eldrix.terminology.snomedct.Protos.Description description_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.Description, com.eldrix.terminology.snomedct.Protos.Description.Builder, com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder> descriptionBuilder_;
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      public boolean hasDescription() {
        return descriptionBuilder_ != null || description_ != null;
      }
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.Description getDescription() {
        if (descriptionBuilder_ == null) {
          return description_ == null ? com.eldrix.terminology.snomedct.Protos.Description.getDefaultInstance() : description_;
        } else {
          return descriptionBuilder_.getMessage();
        }
      }
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      public Builder setDescription(com.eldrix.terminology.snomedct.Protos.Description value) {
        if (descriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          description_ = value;
          onChanged();
        } else {
          descriptionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      public Builder setDescription(
          com.eldrix.terminology.snomedct.Protos.Description.Builder builderForValue) {
        if (descriptionBuilder_ == null) {
          description_ = builderForValue.build();
          onChanged();
        } else {
          descriptionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      public Builder mergeDescription(com.eldrix.terminology.snomedct.Protos.Description value) {
        if (descriptionBuilder_ == null) {
          if (description_ != null) {
            description_ =
              com.eldrix.terminology.snomedct.Protos.Description.newBuilder(description_).mergeFrom(value).buildPartial();
          } else {
            description_ = value;
          }
          onChanged();
        } else {
          descriptionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      public Builder clearDescription() {
        if (descriptionBuilder_ == null) {
          description_ = null;
          onChanged();
        } else {
          description_ = null;
          descriptionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.Description.Builder getDescriptionBuilder() {
        
        onChanged();
        return getDescriptionFieldBuilder().getBuilder();
      }
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder getDescriptionOrBuilder() {
        if (descriptionBuilder_ != null) {
          return descriptionBuilder_.getMessageOrBuilder();
        } else {
          return description_ == null ?
              com.eldrix.terminology.snomedct.Protos.Description.getDefaultInstance() : description_;
        }
      }
      /**
       * <code>.snomed.Description description = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.Description, com.eldrix.terminology.snomedct.Protos.Description.Builder, com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder> 
          getDescriptionFieldBuilder() {
        if (descriptionBuilder_ == null) {
          descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.eldrix.terminology.snomedct.Protos.Description, com.eldrix.terminology.snomedct.Protos.Description.Builder, com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder>(
                  getDescription(),
                  getParentForChildren(),
                  isClean());
          description_ = null;
        }
        return descriptionBuilder_;
      }

      private com.eldrix.terminology.snomedct.Protos.Concept concept_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.Concept, com.eldrix.terminology.snomedct.Protos.Concept.Builder, com.eldrix.terminology.snomedct.Protos.ConceptOrBuilder> conceptBuilder_;
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      public boolean hasConcept() {
        return conceptBuilder_ != null || concept_ != null;
      }
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.Concept getConcept() {
        if (conceptBuilder_ == null) {
          return concept_ == null ? com.eldrix.terminology.snomedct.Protos.Concept.getDefaultInstance() : concept_;
        } else {
          return conceptBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      public Builder setConcept(com.eldrix.terminology.snomedct.Protos.Concept value) {
        if (conceptBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          concept_ = value;
          onChanged();
        } else {
          conceptBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      public Builder setConcept(
          com.eldrix.terminology.snomedct.Protos.Concept.Builder builderForValue) {
        if (conceptBuilder_ == null) {
          concept_ = builderForValue.build();
          onChanged();
        } else {
          conceptBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      public Builder mergeConcept(com.eldrix.terminology.snomedct.Protos.Concept value) {
        if (conceptBuilder_ == null) {
          if (concept_ != null) {
            concept_ =
              com.eldrix.terminology.snomedct.Protos.Concept.newBuilder(concept_).mergeFrom(value).buildPartial();
          } else {
            concept_ = value;
          }
          onChanged();
        } else {
          conceptBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      public Builder clearConcept() {
        if (conceptBuilder_ == null) {
          concept_ = null;
          onChanged();
        } else {
          concept_ = null;
          conceptBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.Concept.Builder getConceptBuilder() {
        
        onChanged();
        return getConceptFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.ConceptOrBuilder getConceptOrBuilder() {
        if (conceptBuilder_ != null) {
          return conceptBuilder_.getMessageOrBuilder();
        } else {
          return concept_ == null ?
              com.eldrix.terminology.snomedct.Protos.Concept.getDefaultInstance() : concept_;
        }
      }
      /**
       * <pre>
       * concept to which this description relates
       * </pre>
       *
       * <code>.snomed.Concept concept = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.Concept, com.eldrix.terminology.snomedct.Protos.Concept.Builder, com.eldrix.terminology.snomedct.Protos.ConceptOrBuilder> 
          getConceptFieldBuilder() {
        if (conceptBuilder_ == null) {
          conceptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.eldrix.terminology.snomedct.Protos.Concept, com.eldrix.terminology.snomedct.Protos.Concept.Builder, com.eldrix.terminology.snomedct.Protos.ConceptOrBuilder>(
                  getConcept(),
                  getParentForChildren(),
                  isClean());
          concept_ = null;
        }
        return conceptBuilder_;
      }

      private com.eldrix.terminology.snomedct.Protos.Description preferredDescription_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.Description, com.eldrix.terminology.snomedct.Protos.Description.Builder, com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder> preferredDescriptionBuilder_;
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      public boolean hasPreferredDescription() {
        return preferredDescriptionBuilder_ != null || preferredDescription_ != null;
      }
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.Description getPreferredDescription() {
        if (preferredDescriptionBuilder_ == null) {
          return preferredDescription_ == null ? com.eldrix.terminology.snomedct.Protos.Description.getDefaultInstance() : preferredDescription_;
        } else {
          return preferredDescriptionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      public Builder setPreferredDescription(com.eldrix.terminology.snomedct.Protos.Description value) {
        if (preferredDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preferredDescription_ = value;
          onChanged();
        } else {
          preferredDescriptionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      public Builder setPreferredDescription(
          com.eldrix.terminology.snomedct.Protos.Description.Builder builderForValue) {
        if (preferredDescriptionBuilder_ == null) {
          preferredDescription_ = builderForValue.build();
          onChanged();
        } else {
          preferredDescriptionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      public Builder mergePreferredDescription(com.eldrix.terminology.snomedct.Protos.Description value) {
        if (preferredDescriptionBuilder_ == null) {
          if (preferredDescription_ != null) {
            preferredDescription_ =
              com.eldrix.terminology.snomedct.Protos.Description.newBuilder(preferredDescription_).mergeFrom(value).buildPartial();
          } else {
            preferredDescription_ = value;
          }
          onChanged();
        } else {
          preferredDescriptionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      public Builder clearPreferredDescription() {
        if (preferredDescriptionBuilder_ == null) {
          preferredDescription_ = null;
          onChanged();
        } else {
          preferredDescription_ = null;
          preferredDescriptionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.Description.Builder getPreferredDescriptionBuilder() {
        
        onChanged();
        return getPreferredDescriptionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      public com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder getPreferredDescriptionOrBuilder() {
        if (preferredDescriptionBuilder_ != null) {
          return preferredDescriptionBuilder_.getMessageOrBuilder();
        } else {
          return preferredDescription_ == null ?
              com.eldrix.terminology.snomedct.Protos.Description.getDefaultInstance() : preferredDescription_;
        }
      }
      /**
       * <pre>
       * concept's preferred description
       * </pre>
       *
       * <code>.snomed.Description preferred_description = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.eldrix.terminology.snomedct.Protos.Description, com.eldrix.terminology.snomedct.Protos.Description.Builder, com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder> 
          getPreferredDescriptionFieldBuilder() {
        if (preferredDescriptionBuilder_ == null) {
          preferredDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.eldrix.terminology.snomedct.Protos.Description, com.eldrix.terminology.snomedct.Protos.Description.Builder, com.eldrix.terminology.snomedct.Protos.DescriptionOrBuilder>(
                  getPreferredDescription(),
                  getParentForChildren(),
                  isClean());
          preferredDescription_ = null;
        }
        return preferredDescriptionBuilder_;
      }

      private java.util.List<java.lang.Long> recursiveParentIds_ = java.util.Collections.emptyList();
      private void ensureRecursiveParentIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          recursiveParentIds_ = new java.util.ArrayList<java.lang.Long>(recursiveParentIds_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * list of all (recursive) IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 recursive_parent_ids = 5;</code>
       */
      public java.util.List<java.lang.Long>
          getRecursiveParentIdsList() {
        return java.util.Collections.unmodifiableList(recursiveParentIds_);
      }
      /**
       * <pre>
       * list of all (recursive) IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 recursive_parent_ids = 5;</code>
       */
      public int getRecursiveParentIdsCount() {
        return recursiveParentIds_.size();
      }
      /**
       * <pre>
       * list of all (recursive) IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 recursive_parent_ids = 5;</code>
       */
      public long getRecursiveParentIds(int index) {
        return recursiveParentIds_.get(index);
      }
      /**
       * <pre>
       * list of all (recursive) IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 recursive_parent_ids = 5;</code>
       */
      public Builder setRecursiveParentIds(
          int index, long value) {
        ensureRecursiveParentIdsIsMutable();
        recursiveParentIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of all (recursive) IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 recursive_parent_ids = 5;</code>
       */
      public Builder addRecursiveParentIds(long value) {
        ensureRecursiveParentIdsIsMutable();
        recursiveParentIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of all (recursive) IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 recursive_parent_ids = 5;</code>
       */
      public Builder addAllRecursiveParentIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRecursiveParentIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, recursiveParentIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of all (recursive) IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 recursive_parent_ids = 5;</code>
       */
      public Builder clearRecursiveParentIds() {
        recursiveParentIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> directParentIds_ = java.util.Collections.emptyList();
      private void ensureDirectParentIdsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          directParentIds_ = new java.util.ArrayList<java.lang.Long>(directParentIds_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * list of direct IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 direct_parent_ids = 6;</code>
       */
      public java.util.List<java.lang.Long>
          getDirectParentIdsList() {
        return java.util.Collections.unmodifiableList(directParentIds_);
      }
      /**
       * <pre>
       * list of direct IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 direct_parent_ids = 6;</code>
       */
      public int getDirectParentIdsCount() {
        return directParentIds_.size();
      }
      /**
       * <pre>
       * list of direct IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 direct_parent_ids = 6;</code>
       */
      public long getDirectParentIds(int index) {
        return directParentIds_.get(index);
      }
      /**
       * <pre>
       * list of direct IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 direct_parent_ids = 6;</code>
       */
      public Builder setDirectParentIds(
          int index, long value) {
        ensureDirectParentIdsIsMutable();
        directParentIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of direct IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 direct_parent_ids = 6;</code>
       */
      public Builder addDirectParentIds(long value) {
        ensureDirectParentIdsIsMutable();
        directParentIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of direct IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 direct_parent_ids = 6;</code>
       */
      public Builder addAllDirectParentIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDirectParentIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, directParentIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of direct IS-A parents for concept
       * </pre>
       *
       * <code>repeated int64 direct_parent_ids = 6;</code>
       */
      public Builder clearDirectParentIds() {
        directParentIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> conceptRefsets_ = java.util.Collections.emptyList();
      private void ensureConceptRefsetsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          conceptRefsets_ = new java.util.ArrayList<java.lang.Long>(conceptRefsets_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * refsets to which the concept belong
       * </pre>
       *
       * <code>repeated int64 concept_refsets = 7;</code>
       */
      public java.util.List<java.lang.Long>
          getConceptRefsetsList() {
        return java.util.Collections.unmodifiableList(conceptRefsets_);
      }
      /**
       * <pre>
       * refsets to which the concept belong
       * </pre>
       *
       * <code>repeated int64 concept_refsets = 7;</code>
       */
      public int getConceptRefsetsCount() {
        return conceptRefsets_.size();
      }
      /**
       * <pre>
       * refsets to which the concept belong
       * </pre>
       *
       * <code>repeated int64 concept_refsets = 7;</code>
       */
      public long getConceptRefsets(int index) {
        return conceptRefsets_.get(index);
      }
      /**
       * <pre>
       * refsets to which the concept belong
       * </pre>
       *
       * <code>repeated int64 concept_refsets = 7;</code>
       */
      public Builder setConceptRefsets(
          int index, long value) {
        ensureConceptRefsetsIsMutable();
        conceptRefsets_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refsets to which the concept belong
       * </pre>
       *
       * <code>repeated int64 concept_refsets = 7;</code>
       */
      public Builder addConceptRefsets(long value) {
        ensureConceptRefsetsIsMutable();
        conceptRefsets_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refsets to which the concept belong
       * </pre>
       *
       * <code>repeated int64 concept_refsets = 7;</code>
       */
      public Builder addAllConceptRefsets(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureConceptRefsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, conceptRefsets_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refsets to which the concept belong
       * </pre>
       *
       * <code>repeated int64 concept_refsets = 7;</code>
       */
      public Builder clearConceptRefsets() {
        conceptRefsets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> descriptionRefsets_ = java.util.Collections.emptyList();
      private void ensureDescriptionRefsetsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          descriptionRefsets_ = new java.util.ArrayList<java.lang.Long>(descriptionRefsets_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       * refsets to which the description belong
       * </pre>
       *
       * <code>repeated int64 description_refsets = 8;</code>
       */
      public java.util.List<java.lang.Long>
          getDescriptionRefsetsList() {
        return java.util.Collections.unmodifiableList(descriptionRefsets_);
      }
      /**
       * <pre>
       * refsets to which the description belong
       * </pre>
       *
       * <code>repeated int64 description_refsets = 8;</code>
       */
      public int getDescriptionRefsetsCount() {
        return descriptionRefsets_.size();
      }
      /**
       * <pre>
       * refsets to which the description belong
       * </pre>
       *
       * <code>repeated int64 description_refsets = 8;</code>
       */
      public long getDescriptionRefsets(int index) {
        return descriptionRefsets_.get(index);
      }
      /**
       * <pre>
       * refsets to which the description belong
       * </pre>
       *
       * <code>repeated int64 description_refsets = 8;</code>
       */
      public Builder setDescriptionRefsets(
          int index, long value) {
        ensureDescriptionRefsetsIsMutable();
        descriptionRefsets_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refsets to which the description belong
       * </pre>
       *
       * <code>repeated int64 description_refsets = 8;</code>
       */
      public Builder addDescriptionRefsets(long value) {
        ensureDescriptionRefsetsIsMutable();
        descriptionRefsets_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refsets to which the description belong
       * </pre>
       *
       * <code>repeated int64 description_refsets = 8;</code>
       */
      public Builder addAllDescriptionRefsets(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDescriptionRefsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, descriptionRefsets_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refsets to which the description belong
       * </pre>
       *
       * <code>repeated int64 description_refsets = 8;</code>
       */
      public Builder clearDescriptionRefsets() {
        descriptionRefsets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snomed.ExtendedDescription)
    }

    // @@protoc_insertion_point(class_scope:snomed.ExtendedDescription)
    private static final com.eldrix.terminology.snomedct.Protos.ExtendedDescription DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.eldrix.terminology.snomedct.Protos.ExtendedDescription();
    }

    public static com.eldrix.terminology.snomedct.Protos.ExtendedDescription getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExtendedDescription>
        PARSER = new com.google.protobuf.AbstractParser<ExtendedDescription>() {
      public ExtendedDescription parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExtendedDescription(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExtendedDescription> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExtendedDescription> getParserForType() {
      return PARSER;
    }

    public com.eldrix.terminology.snomedct.Protos.ExtendedDescription getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_Concept_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_Concept_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_Description_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_Description_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_Relationship_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_Relationship_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_ReferenceSetItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_ReferenceSetItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_RefSetDescriptorReferenceSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_RefSetDescriptorReferenceSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_SimpleReferenceSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_SimpleReferenceSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_LanguageReferenceSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_LanguageReferenceSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_SimpleMapReferenceSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_SimpleMapReferenceSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_ComplexMapReferenceSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_ComplexMapReferenceSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snomed_ExtendedDescription_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snomed_ExtendedDescription_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023snomed/snomed.proto\022\006snomed\032\037google/pr" +
      "otobuf/timestamp.proto\"\212\001\n\007Concept\022\n\n\002id" +
      "\030\001 \001(\003\0222\n\016effective_time\030\002 \001(\0132\032.google." +
      "protobuf.Timestamp\022\016\n\006active\030\003 \001(\010\022\021\n\tmo" +
      "dule_id\030\004 \001(\003\022\034\n\024definition_status_id\030\005 " +
      "\001(\003\"\324\001\n\013Description\022\n\n\002id\030\001 \001(\003\0222\n\016effec" +
      "tive_time\030\002 \001(\0132\032.google.protobuf.Timest" +
      "amp\022\016\n\006active\030\003 \001(\010\022\021\n\tmodule_id\030\004 \001(\003\022\022" +
      "\n\nconcept_id\030\005 \001(\003\022\024\n\014LanguageCode\030\006 \001(\t" +
      "\022\017\n\007type_id\030\007 \001(\003\022\014\n\004term\030\010 \001(\t\022\031\n\021case_" +
      "significance\030\t \001(\003\"\376\001\n\014Relationship\022\n\n\002i" +
      "d\030\001 \001(\003\0222\n\016effective_time\030\002 \001(\0132\032.google" +
      ".protobuf.Timestamp\022\016\n\006active\030\003 \001(\010\022\021\n\tm" +
      "odule_id\030\004 \001(\003\022\021\n\tsource_id\030\005 \001(\003\022\026\n\016des" +
      "tination_id\030\006 \001(\003\022\032\n\022relationship_group\030" +
      "\007 \001(\003\022\017\n\007type_id\030\010 \001(\003\022\036\n\026characteristic" +
      "_type_id\030\t \001(\003\022\023\n\013modifier_id\030\n \001(\003\"\211\003\n\020" +
      "ReferenceSetItem\022\n\n\002id\030\001 \001(\t\0222\n\016effectiv" +
      "e_time\030\002 \001(\0132\032.google.protobuf.Timestamp" +
      "\022\016\n\006active\030\003 \001(\010\022\021\n\tmodule_id\030\004 \001(\003\022\021\n\tr" +
      "efset_id\030\005 \001(\003\022\037\n\027referenced_component_i" +
      "d\030\006 \001(\003\022A\n\021refset_descriptor\030\007 \001(\0132$.sno" +
      "med.RefSetDescriptorReferenceSetH\000\022,\n\006si" +
      "mple\030\010 \001(\0132\032.snomed.SimpleReferenceSetH\000" +
      "\0220\n\010language\030\t \001(\0132\034.snomed.LanguageRefe" +
      "renceSetH\000\0223\n\nsimple_map\030\n \001(\0132\035.snomed." +
      "SimpleMapReferenceSetH\000B\006\n\004body\"t\n\034RefSe" +
      "tDescriptorReferenceSet\022 \n\030attribute_des" +
      "cription_id\030\001 \001(\003\022\031\n\021attribute_type_id\030\002" +
      " \001(\003\022\027\n\017attribute_order\030\003 \001(\r\"\024\n\022SimpleR" +
      "eferenceSet\"0\n\024LanguageReferenceSet\022\030\n\020a" +
      "cceptability_id\030\001 \001(\003\"+\n\025SimpleMapRefere" +
      "nceSet\022\022\n\nmap_target\030\001 \001(\t\"\253\001\n\026ComplexMa" +
      "pReferenceSet\022\021\n\tmap_group\030\001 \001(\003\022\024\n\014map_" +
      "priority\030\002 \001(\003\022\020\n\010map_rule\030\003 \001(\t\022\022\n\nmap_" +
      "advice\030\004 \001(\t\022\022\n\nmap_target\030\005 \001(\t\022\025\n\rcorr" +
      "ection_id\030\006 \001(\003\022\027\n\017map_category_id\030\007 \001(\003" +
      "\"\212\002\n\023ExtendedDescription\022(\n\013description\030" +
      "\001 \001(\0132\023.snomed.Description\022 \n\007concept\030\003 " +
      "\001(\0132\017.snomed.Concept\0222\n\025preferred_descri" +
      "ption\030\004 \001(\0132\023.snomed.Description\022\034\n\024recu" +
      "rsive_parent_ids\030\005 \003(\003\022\031\n\021direct_parent_" +
      "ids\030\006 \003(\003\022\027\n\017concept_refsets\030\007 \003(\003\022\033\n\023de" +
      "scription_refsets\030\010 \003(\003J\004\010\002\020\003B1\n\037com.eld" +
      "rix.terminology.snomedctB\006ProtosZ\006snomed" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        }, assigner);
    internal_static_snomed_Concept_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_snomed_Concept_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_Concept_descriptor,
        new java.lang.String[] { "Id", "EffectiveTime", "Active", "ModuleId", "DefinitionStatusId", });
    internal_static_snomed_Description_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_snomed_Description_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_Description_descriptor,
        new java.lang.String[] { "Id", "EffectiveTime", "Active", "ModuleId", "ConceptId", "LanguageCode", "TypeId", "Term", "CaseSignificance", });
    internal_static_snomed_Relationship_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_snomed_Relationship_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_Relationship_descriptor,
        new java.lang.String[] { "Id", "EffectiveTime", "Active", "ModuleId", "SourceId", "DestinationId", "RelationshipGroup", "TypeId", "CharacteristicTypeId", "ModifierId", });
    internal_static_snomed_ReferenceSetItem_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_snomed_ReferenceSetItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_ReferenceSetItem_descriptor,
        new java.lang.String[] { "Id", "EffectiveTime", "Active", "ModuleId", "RefsetId", "ReferencedComponentId", "RefsetDescriptor", "Simple", "Language", "SimpleMap", "Body", });
    internal_static_snomed_RefSetDescriptorReferenceSet_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_snomed_RefSetDescriptorReferenceSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_RefSetDescriptorReferenceSet_descriptor,
        new java.lang.String[] { "AttributeDescriptionId", "AttributeTypeId", "AttributeOrder", });
    internal_static_snomed_SimpleReferenceSet_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_snomed_SimpleReferenceSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_SimpleReferenceSet_descriptor,
        new java.lang.String[] { });
    internal_static_snomed_LanguageReferenceSet_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_snomed_LanguageReferenceSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_LanguageReferenceSet_descriptor,
        new java.lang.String[] { "AcceptabilityId", });
    internal_static_snomed_SimpleMapReferenceSet_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_snomed_SimpleMapReferenceSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_SimpleMapReferenceSet_descriptor,
        new java.lang.String[] { "MapTarget", });
    internal_static_snomed_ComplexMapReferenceSet_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_snomed_ComplexMapReferenceSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_ComplexMapReferenceSet_descriptor,
        new java.lang.String[] { "MapGroup", "MapPriority", "MapRule", "MapAdvice", "MapTarget", "CorrectionId", "MapCategoryId", });
    internal_static_snomed_ExtendedDescription_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_snomed_ExtendedDescription_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snomed_ExtendedDescription_descriptor,
        new java.lang.String[] { "Description", "Concept", "PreferredDescription", "RecursiveParentIds", "DirectParentIds", "ConceptRefsets", "DescriptionRefsets", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
